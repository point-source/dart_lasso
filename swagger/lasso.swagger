{
    "swagger": "2.0",
    "info": {
        "title": "Lasso Workforce API",
        "description": "REST API for the Lasso Workforce platform",
        "termsOfService": "https://www.lasso.io/terms-of-use/",
        "contact": {
            "email": "support@lasso.io"
        },
        "version": "v1"
    },
    "host": "yourcompany.lasso.io",
    "schemes": [
        "https"
    ],
    "basePath": "/api/v1",
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "securityDefinitions": {
        "api_key": {
            "in": "header",
            "name": "LASSO-APIKEY",
            "type": "apiKey"
        }
    },
    "security": [
        {
            "api_key": []
        }
    ],
    "paths": {
        "/account_event_statuses": {
            "get": {
                "operationId": "account_event_statuses_list",
                "description": "An `account_event_status` resource represents a custom status for an `event` depending on the state of the     event (e.g. Confirmed, Invoice Created, etc.)",
                "parameters": [
                    {
                        "name": "external_code",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/AccountEventStatus"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "account_event_statuses"
                ]
            },
            "post": {
                "operationId": "account_event_statuses_create",
                "description": "An `account_event_status` resource represents a custom status for an `event` depending on the state of the     event (e.g. Confirmed, Invoice Created, etc.)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AccountEventStatus"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/AccountEventStatus"
                        }
                    }
                },
                "tags": [
                    "account_event_statuses"
                ]
            },
            "parameters": []
        },
        "/account_event_statuses/{id}": {
            "get": {
                "operationId": "account_event_statuses_read",
                "description": "An `account_event_status` resource represents a custom status for an `event` depending on the state of the     event (e.g. Confirmed, Invoice Created, etc.)",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/AccountEventStatus"
                        }
                    }
                },
                "tags": [
                    "account_event_statuses"
                ]
            },
            "put": {
                "operationId": "account_event_statuses_update",
                "description": "An `account_event_status` resource represents a custom status for an `event` depending on the state of the     event (e.g. Confirmed, Invoice Created, etc.)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AccountEventStatus"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/AccountEventStatus"
                        }
                    }
                },
                "tags": [
                    "account_event_statuses"
                ]
            },
            "patch": {
                "operationId": "account_event_statuses_partial_update",
                "description": "An `account_event_status` resource represents a custom status for an `event` depending on the state of the     event (e.g. Confirmed, Invoice Created, etc.)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AccountEventStatus"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/AccountEventStatus"
                        }
                    }
                },
                "tags": [
                    "account_event_statuses"
                ]
            },
            "delete": {
                "operationId": "account_event_statuses_delete",
                "description": "An `account_event_status` resource represents a custom status for an `event` depending on the state of the     event (e.g. Confirmed, Invoice Created, etc.)",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "account_event_statuses"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "The LASSO unique identifier for this resource.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/account_user_role": {
            "get": {
                "operationId": "account_user_role_list",
                "description": "An `account_user_role` represents the role for a user.",
                "parameters": [
                    {
                        "name": "user_email",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/AccountUserRole"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "account_user_role"
                ]
            },
            "parameters": []
        },
        "/account_user_role/{id}": {
            "get": {
                "operationId": "account_user_role_read",
                "description": "An `account_user_role` represents the role for a user.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/AccountUserRole"
                        }
                    }
                },
                "tags": [
                    "account_user_role"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "The LASSO unique identifier for this resource.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/airports": {
            "get": {
                "operationId": "airports_list",
                "description": "An `airport` resource represents a geographic location associated with air travel and is     used for travel quotes and determining the `crew` resource local `market` resource.\nResource information includes the name, location and common look-up codes for `airport`s.     `airport` resources are system defined, read-only and have a many-to-one relationship with `market` resources.",
                "parameters": [
                    {
                        "name": "zip",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Airport"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "airports"
                ]
            },
            "parameters": []
        },
        "/airports/{id}": {
            "get": {
                "operationId": "airports_read",
                "description": "An `airport` resource represents a geographic location associated with air travel and is     used for travel quotes and determining the `crew` resource local `market` resource.\nResource information includes the name, location and common look-up codes for `airport`s.     `airport` resources are system defined, read-only and have a many-to-one relationship with `market` resources.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Airport"
                        }
                    }
                },
                "tags": [
                    "airports"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "The LASSO unique identifier for the `airport` resource.",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/client_addresses": {
            "get": {
                "operationId": "client_addresses_list",
                "description": "The `client_address` resource represents a physical address associated with a Client. A `client`     may have multiple unique `client_address` resources associated with it.",
                "parameters": [
                    {
                        "name": "client",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company_name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "contact_name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "street1",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "db_date_updated__gt",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "db_date_updated__lt",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ClientAddress"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "client_addresses"
                ]
            },
            "post": {
                "operationId": "client_addresses_create",
                "description": "The `client_address` resource represents a physical address associated with a Client. A `client`     may have multiple unique `client_address` resources associated with it.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ClientAddress"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ClientAddress"
                        }
                    }
                },
                "tags": [
                    "client_addresses"
                ]
            },
            "parameters": []
        },
        "/client_addresses/{id}": {
            "get": {
                "operationId": "client_addresses_read",
                "description": "The `client_address` resource represents a physical address associated with a Client. A `client`     may have multiple unique `client_address` resources associated with it.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ClientAddress"
                        }
                    }
                },
                "tags": [
                    "client_addresses"
                ]
            },
            "put": {
                "operationId": "client_addresses_update",
                "description": "The `client_address` resource represents a physical address associated with a Client. A `client`     may have multiple unique `client_address` resources associated with it.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ClientAddress"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ClientAddress"
                        }
                    }
                },
                "tags": [
                    "client_addresses"
                ]
            },
            "patch": {
                "operationId": "client_addresses_partial_update",
                "description": "The `client_address` resource represents a physical address associated with a Client. A `client`     may have multiple unique `client_address` resources associated with it.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ClientAddress"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ClientAddress"
                        }
                    }
                },
                "tags": [
                    "client_addresses"
                ]
            },
            "delete": {
                "operationId": "client_addresses_delete",
                "description": "The `client_address` resource represents a physical address associated with a Client. A `client`     may have multiple unique `client_address` resources associated with it.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "client_addresses"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "The LASSO unique identifier for this resource.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/client_contacts": {
            "get": {
                "operationId": "client_contacts_list",
                "description": "`client_contact` represents contact information for entities associated with a `client`.     The earliest-created `client_contact` of type 'main' is included in `client` list views     as the associated `client`'s primary contact information.",
                "parameters": [
                    {
                        "name": "client",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "first_name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "last_name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "db_date_updated__gt",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "db_date_updated__lt",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ClientContact"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "client_contacts"
                ]
            },
            "post": {
                "operationId": "client_contacts_create",
                "description": "`client_contact` represents contact information for entities associated with a `client`.     The earliest-created `client_contact` of type 'main' is included in `client` list views     as the associated `client`'s primary contact information.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ClientContact"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ClientContact"
                        }
                    }
                },
                "tags": [
                    "client_contacts"
                ]
            },
            "parameters": []
        },
        "/client_contacts/{id}": {
            "get": {
                "operationId": "client_contacts_read",
                "description": "`client_contact` represents contact information for entities associated with a `client`.     The earliest-created `client_contact` of type 'main' is included in `client` list views     as the associated `client`'s primary contact information.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ClientContact"
                        }
                    }
                },
                "tags": [
                    "client_contacts"
                ]
            },
            "put": {
                "operationId": "client_contacts_update",
                "description": "`client_contact` represents contact information for entities associated with a `client`.     The earliest-created `client_contact` of type 'main' is included in `client` list views     as the associated `client`'s primary contact information.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ClientContact"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ClientContact"
                        }
                    }
                },
                "tags": [
                    "client_contacts"
                ]
            },
            "patch": {
                "operationId": "client_contacts_partial_update",
                "description": "`client_contact` represents contact information for entities associated with a `client`.     The earliest-created `client_contact` of type 'main' is included in `client` list views     as the associated `client`'s primary contact information.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ClientContact"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ClientContact"
                        }
                    }
                },
                "tags": [
                    "client_contacts"
                ]
            },
            "delete": {
                "operationId": "client_contacts_delete",
                "description": "`client_contact` represents contact information for entities associated with a `client`.     The earliest-created `client_contact` of type 'main' is included in `client` list views     as the associated `client`'s primary contact information.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "client_contacts"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "The LASSO unique identifier for this resource.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/clients": {
            "get": {
                "operationId": "clients_list",
                "description": "The clients resource represents your company\u2019s clients and their associated contact and     address information. The clients resource is one of the four main resources in the LASSO REST API.     The clients resource has two related one-to-many resources: client_address and client_contacts.",
                "parameters": [
                    {
                        "name": "external_code",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "code",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "db_date_updated__gt",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "db_date_updated__lt",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Client"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "clients"
                ]
            },
            "post": {
                "operationId": "clients_create",
                "description": "The clients resource represents your company\u2019s clients and their associated contact and     address information. The clients resource is one of the four main resources in the LASSO REST API.     The clients resource has two related one-to-many resources: client_address and client_contacts.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Client"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Client"
                        }
                    }
                },
                "tags": [
                    "clients"
                ]
            },
            "parameters": []
        },
        "/clients/{id}": {
            "get": {
                "operationId": "clients_read",
                "description": "The clients resource represents your company\u2019s clients and their associated contact and     address information. The clients resource is one of the four main resources in the LASSO REST API.     The clients resource has two related one-to-many resources: client_address and client_contacts.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Client"
                        }
                    }
                },
                "tags": [
                    "clients"
                ]
            },
            "put": {
                "operationId": "clients_update",
                "description": "The clients resource represents your company\u2019s clients and their associated contact and     address information. The clients resource is one of the four main resources in the LASSO REST API.     The clients resource has two related one-to-many resources: client_address and client_contacts.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Client"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Client"
                        }
                    }
                },
                "tags": [
                    "clients"
                ]
            },
            "patch": {
                "operationId": "clients_partial_update",
                "description": "The clients resource represents your company\u2019s clients and their associated contact and     address information. The clients resource is one of the four main resources in the LASSO REST API.     The clients resource has two related one-to-many resources: client_address and client_contacts.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Client"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Client"
                        }
                    }
                },
                "tags": [
                    "clients"
                ]
            },
            "delete": {
                "operationId": "clients_delete",
                "description": "The clients resource represents your company\u2019s clients and their associated contact and     address information. The clients resource is one of the four main resources in the LASSO REST API.     The clients resource has two related one-to-many resources: client_address and client_contacts.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "clients"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "The LASSO unique identifier for this resource.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/crew": {
            "get": {
                "operationId": "crew_list",
                "description": "A crew resource represents crew members or staff members and have associated general information, notes,\npositions, tags, and addresses. The crew resource is one of the four main resources in the LASSO REST API.\nA crew resource has four related one-to-many resources:\ncrew_addresses, crew_contacts, crew_positions, and crew_tags.\nThe crew resource also has one one-to-one resource: crew_settings.",
                "parameters": [
                    {
                        "name": "code",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "external_code",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "us_state_of_residence",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "db_date_updated__gt",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "db_date_updated__lt",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Crew"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crew"
                ]
            },
            "post": {
                "operationId": "crew_create",
                "description": "A crew resource represents crew members or staff members and have associated general information, notes,\npositions, tags, and addresses. The crew resource is one of the four main resources in the LASSO REST API.\nA crew resource has four related one-to-many resources:\ncrew_addresses, crew_contacts, crew_positions, and crew_tags.\nThe crew resource also has one one-to-one resource: crew_settings.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Crew"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Crew"
                        }
                    }
                },
                "tags": [
                    "crew"
                ]
            },
            "parameters": []
        },
        "/crew/{id}": {
            "get": {
                "operationId": "crew_read",
                "description": "A crew resource represents crew members or staff members and have associated general information, notes,\npositions, tags, and addresses. The crew resource is one of the four main resources in the LASSO REST API.\nA crew resource has four related one-to-many resources:\ncrew_addresses, crew_contacts, crew_positions, and crew_tags.\nThe crew resource also has one one-to-one resource: crew_settings.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Crew"
                        }
                    }
                },
                "tags": [
                    "crew"
                ]
            },
            "put": {
                "operationId": "crew_update",
                "description": "A crew resource represents crew members or staff members and have associated general information, notes,\npositions, tags, and addresses. The crew resource is one of the four main resources in the LASSO REST API.\nA crew resource has four related one-to-many resources:\ncrew_addresses, crew_contacts, crew_positions, and crew_tags.\nThe crew resource also has one one-to-one resource: crew_settings.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Crew"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Crew"
                        }
                    }
                },
                "tags": [
                    "crew"
                ]
            },
            "patch": {
                "operationId": "crew_partial_update",
                "description": "A crew resource represents crew members or staff members and have associated general information, notes,\npositions, tags, and addresses. The crew resource is one of the four main resources in the LASSO REST API.\nA crew resource has four related one-to-many resources:\ncrew_addresses, crew_contacts, crew_positions, and crew_tags.\nThe crew resource also has one one-to-one resource: crew_settings.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Crew"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Crew"
                        }
                    }
                },
                "tags": [
                    "crew"
                ]
            },
            "delete": {
                "operationId": "crew_delete",
                "description": "A crew resource represents crew members or staff members and have associated general information, notes,\npositions, tags, and addresses. The crew resource is one of the four main resources in the LASSO REST API.\nA crew resource has four related one-to-many resources:\ncrew_addresses, crew_contacts, crew_positions, and crew_tags.\nThe crew resource also has one one-to-one resource: crew_settings.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "crew"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "The LASSO unique identifier for this resource.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/crew_addresses": {
            "post": {
                "operationId": "crew_addresses_create",
                "description": "The `crew_address` resource represents a physical address associated with a `crew` member. A `crew`     may have multiple `crew_address` resources associated with it.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CrewAddress"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CrewAddress"
                        }
                    }
                },
                "tags": [
                    "crew_addresses"
                ]
            },
            "parameters": []
        },
        "/crew_addresses/{id}": {
            "get": {
                "operationId": "crew_addresses_read",
                "description": "The `crew_address` resource represents a physical address associated with a `crew` member. A `crew`     may have multiple `crew_address` resources associated with it.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CrewAddress"
                        }
                    }
                },
                "tags": [
                    "crew_addresses"
                ]
            },
            "put": {
                "operationId": "crew_addresses_update",
                "description": "The `crew_address` resource represents a physical address associated with a `crew` member. A `crew`     may have multiple `crew_address` resources associated with it.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CrewAddress"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CrewAddress"
                        }
                    }
                },
                "tags": [
                    "crew_addresses"
                ]
            },
            "patch": {
                "operationId": "crew_addresses_partial_update",
                "description": "The `crew_address` resource represents a physical address associated with a `crew` member. A `crew`     may have multiple `crew_address` resources associated with it.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CrewAddress"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CrewAddress"
                        }
                    }
                },
                "tags": [
                    "crew_addresses"
                ]
            },
            "delete": {
                "operationId": "crew_addresses_delete",
                "description": "The `crew_address` resource represents a physical address associated with a `crew` member. A `crew`     may have multiple `crew_address` resources associated with it.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "crew_addresses"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "The LASSO unique identifier for this resource.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/crew_notes": {
            "post": {
                "operationId": "crew_notes_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CrewNote"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CrewNote"
                        }
                    }
                },
                "tags": [
                    "crew_notes"
                ]
            },
            "parameters": []
        },
        "/crew_notes/{id}": {
            "get": {
                "operationId": "crew_notes_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CrewNote"
                        }
                    }
                },
                "tags": [
                    "crew_notes"
                ]
            },
            "put": {
                "operationId": "crew_notes_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CrewNote"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CrewNote"
                        }
                    }
                },
                "tags": [
                    "crew_notes"
                ]
            },
            "patch": {
                "operationId": "crew_notes_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CrewNote"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CrewNote"
                        }
                    }
                },
                "tags": [
                    "crew_notes"
                ]
            },
            "delete": {
                "operationId": "crew_notes_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "crew_notes"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "The LASSO unique identifier for this resource.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/crew_positions": {
            "post": {
                "operationId": "crew_positions_create",
                "description": "`crew_position` describes a `crew`'s relationship to a company `position`.     A `crew` may have relationships with many company `position`s, and a company may associate multiple `crew` members     with a `position` allowing granular control over each `crew`'s varying per-`position` pay rates, ratings,     and status.  A `crew` must have a `crew_position` of status \"approved\" to be eligible for `event`     crewing for a given `position`.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CrewPosition"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CrewPosition"
                        }
                    }
                },
                "tags": [
                    "crew_positions"
                ]
            },
            "parameters": []
        },
        "/crew_positions/{id}": {
            "get": {
                "operationId": "crew_positions_read",
                "description": "`crew_position` describes a `crew`'s relationship to a company `position`.     A `crew` may have relationships with many company `position`s, and a company may associate multiple `crew` members     with a `position` allowing granular control over each `crew`'s varying per-`position` pay rates, ratings,     and status.  A `crew` must have a `crew_position` of status \"approved\" to be eligible for `event`     crewing for a given `position`.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CrewPosition"
                        }
                    }
                },
                "tags": [
                    "crew_positions"
                ]
            },
            "put": {
                "operationId": "crew_positions_update",
                "description": "`crew_position` describes a `crew`'s relationship to a company `position`.     A `crew` may have relationships with many company `position`s, and a company may associate multiple `crew` members     with a `position` allowing granular control over each `crew`'s varying per-`position` pay rates, ratings,     and status.  A `crew` must have a `crew_position` of status \"approved\" to be eligible for `event`     crewing for a given `position`.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CrewPosition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CrewPosition"
                        }
                    }
                },
                "tags": [
                    "crew_positions"
                ]
            },
            "patch": {
                "operationId": "crew_positions_partial_update",
                "description": "`crew_position` describes a `crew`'s relationship to a company `position`.     A `crew` may have relationships with many company `position`s, and a company may associate multiple `crew` members     with a `position` allowing granular control over each `crew`'s varying per-`position` pay rates, ratings,     and status.  A `crew` must have a `crew_position` of status \"approved\" to be eligible for `event`     crewing for a given `position`.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CrewPosition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CrewPosition"
                        }
                    }
                },
                "tags": [
                    "crew_positions"
                ]
            },
            "delete": {
                "operationId": "crew_positions_delete",
                "description": "`crew_position` describes a `crew`'s relationship to a company `position`.     A `crew` may have relationships with many company `position`s, and a company may associate multiple `crew` members     with a `position` allowing granular control over each `crew`'s varying per-`position` pay rates, ratings,     and status.  A `crew` must have a `crew_position` of status \"approved\" to be eligible for `event`     crewing for a given `position`.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "crew_positions"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "The LASSO unique identifier for this resource.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/crew_ratings": {
            "post": {
                "operationId": "crew_ratings_create",
                "description": "A `crew_rating` resource represents the rating for a crew associated with a position on an event.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CrewRating"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CrewRating"
                        }
                    }
                },
                "tags": [
                    "crew_ratings"
                ]
            },
            "parameters": []
        },
        "/crew_ratings/{id}": {
            "get": {
                "operationId": "crew_ratings_read",
                "description": "A `crew_rating` resource represents the rating for a crew associated with a position on an event.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CrewRating"
                        }
                    }
                },
                "tags": [
                    "crew_ratings"
                ]
            },
            "put": {
                "operationId": "crew_ratings_update",
                "description": "A `crew_rating` resource represents the rating for a crew associated with a position on an event.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CrewRating"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CrewRating"
                        }
                    }
                },
                "tags": [
                    "crew_ratings"
                ]
            },
            "patch": {
                "operationId": "crew_ratings_partial_update",
                "description": "A `crew_rating` resource represents the rating for a crew associated with a position on an event.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CrewRating"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CrewRating"
                        }
                    }
                },
                "tags": [
                    "crew_ratings"
                ]
            },
            "delete": {
                "operationId": "crew_ratings_delete",
                "description": "A `crew_rating` resource represents the rating for a crew associated with a position on an event.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "crew_ratings"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "The LASSO unique identifier for this resource.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/crew_settings": {
            "post": {
                "operationId": "crew_settings_create",
                "description": "A `crew_settings` resource represents various settings for a `crew` member. Used for things like\ndate of birth, disabling types of notifications, and travel settings.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CrewSettings"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CrewSettings"
                        }
                    }
                },
                "tags": [
                    "crew_settings"
                ]
            },
            "parameters": []
        },
        "/crew_settings/{id}": {
            "get": {
                "operationId": "crew_settings_read",
                "description": "A `crew_settings` resource represents various settings for a `crew` member. Used for things like\ndate of birth, disabling types of notifications, and travel settings.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CrewSettings"
                        }
                    }
                },
                "tags": [
                    "crew_settings"
                ]
            },
            "put": {
                "operationId": "crew_settings_update",
                "description": "A `crew_settings` resource represents various settings for a `crew` member. Used for things like\ndate of birth, disabling types of notifications, and travel settings.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CrewSettings"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CrewSettings"
                        }
                    }
                },
                "tags": [
                    "crew_settings"
                ]
            },
            "patch": {
                "operationId": "crew_settings_partial_update",
                "description": "A `crew_settings` resource represents various settings for a `crew` member. Used for things like\ndate of birth, disabling types of notifications, and travel settings.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CrewSettings"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CrewSettings"
                        }
                    }
                },
                "tags": [
                    "crew_settings"
                ]
            },
            "delete": {
                "operationId": "crew_settings_delete",
                "description": "A `crew_settings` resource represents various settings for a `crew` member. Used for things like\ndate of birth, disabling types of notifications, and travel settings.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "crew_settings"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "The LASSO unique identifier for this resource.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/crew_tags": {
            "post": {
                "operationId": "crew_tags_create",
                "description": "A `crew_tag` resource represents custom attributes for a `crew` member. Useful for things like     certain models of equipment, skills, travel preferences, or other data useful to the business.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CrewTag"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CrewTag"
                        }
                    }
                },
                "tags": [
                    "crew_tags"
                ]
            },
            "parameters": []
        },
        "/crew_tags/{id}": {
            "get": {
                "operationId": "crew_tags_read",
                "description": "A `crew_tag` resource represents custom attributes for a `crew` member. Useful for things like     certain models of equipment, skills, travel preferences, or other data useful to the business.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CrewTag"
                        }
                    }
                },
                "tags": [
                    "crew_tags"
                ]
            },
            "put": {
                "operationId": "crew_tags_update",
                "description": "A `crew_tag` resource represents custom attributes for a `crew` member. Useful for things like     certain models of equipment, skills, travel preferences, or other data useful to the business.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CrewTag"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CrewTag"
                        }
                    }
                },
                "tags": [
                    "crew_tags"
                ]
            },
            "patch": {
                "operationId": "crew_tags_partial_update",
                "description": "A `crew_tag` resource represents custom attributes for a `crew` member. Useful for things like     certain models of equipment, skills, travel preferences, or other data useful to the business.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CrewTag"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CrewTag"
                        }
                    }
                },
                "tags": [
                    "crew_tags"
                ]
            },
            "delete": {
                "operationId": "crew_tags_delete",
                "description": "A `crew_tag` resource represents custom attributes for a `crew` member. Useful for things like     certain models of equipment, skills, travel preferences, or other data useful to the business.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "crew_tags"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "The LASSO unique identifier for this resource.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/custom_field_responses": {
            "get": {
                "operationId": "custom_field_responses_list",
                "description": "A `custom_field_response` resource represents the crew data associated with a custom field",
                "parameters": [
                    {
                        "name": "crew",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "question",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/CustomFieldResponse"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "custom_field_responses"
                ]
            },
            "post": {
                "operationId": "custom_field_responses_create",
                "description": "A `custom_field_response` resource represents the crew data associated with a custom field",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CustomFieldResponse"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CustomFieldResponse"
                        }
                    }
                },
                "tags": [
                    "custom_field_responses"
                ]
            },
            "parameters": []
        },
        "/custom_field_responses/{id}": {
            "get": {
                "operationId": "custom_field_responses_read",
                "description": "A `custom_field_response` resource represents the crew data associated with a custom field",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CustomFieldResponse"
                        }
                    }
                },
                "tags": [
                    "custom_field_responses"
                ]
            },
            "put": {
                "operationId": "custom_field_responses_update",
                "description": "A `custom_field_response` resource represents the crew data associated with a custom field",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CustomFieldResponse"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CustomFieldResponse"
                        }
                    }
                },
                "tags": [
                    "custom_field_responses"
                ]
            },
            "patch": {
                "operationId": "custom_field_responses_partial_update",
                "description": "A `custom_field_response` resource represents the crew data associated with a custom field",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CustomFieldResponse"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CustomFieldResponse"
                        }
                    }
                },
                "tags": [
                    "custom_field_responses"
                ]
            },
            "delete": {
                "operationId": "custom_field_responses_delete",
                "description": "A `custom_field_response` resource represents the crew data associated with a custom field",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "custom_field_responses"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "The LASSO unique identifier for this resource.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/custom_fields": {
            "get": {
                "operationId": "custom_fields_list",
                "description": "A `custom_field` resource represents the configuration for custom fields that can be associated with a crew\ngathered through the registration process or used internally to track additional data for a crew.",
                "parameters": [
                    {
                        "name": "term",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "label",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/CustomField"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "custom_fields"
                ]
            },
            "post": {
                "operationId": "custom_fields_create",
                "description": "A `custom_field` resource represents the configuration for custom fields that can be associated with a crew\ngathered through the registration process or used internally to track additional data for a crew.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CustomField"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CustomField"
                        }
                    }
                },
                "tags": [
                    "custom_fields"
                ]
            },
            "parameters": []
        },
        "/custom_fields/{id}": {
            "get": {
                "operationId": "custom_fields_read",
                "description": "A `custom_field` resource represents the configuration for custom fields that can be associated with a crew\ngathered through the registration process or used internally to track additional data for a crew.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CustomField"
                        }
                    }
                },
                "tags": [
                    "custom_fields"
                ]
            },
            "put": {
                "operationId": "custom_fields_update",
                "description": "A `custom_field` resource represents the configuration for custom fields that can be associated with a crew\ngathered through the registration process or used internally to track additional data for a crew.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CustomField"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CustomField"
                        }
                    }
                },
                "tags": [
                    "custom_fields"
                ]
            },
            "patch": {
                "operationId": "custom_fields_partial_update",
                "description": "A `custom_field` resource represents the configuration for custom fields that can be associated with a crew\ngathered through the registration process or used internally to track additional data for a crew.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CustomField"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CustomField"
                        }
                    }
                },
                "tags": [
                    "custom_fields"
                ]
            },
            "delete": {
                "operationId": "custom_fields_delete",
                "description": "A `custom_field` resource represents the configuration for custom fields that can be associated with a crew\ngathered through the registration process or used internally to track additional data for a crew.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "custom_fields"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "The LASSO unique identifier for this resource.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/divisions": {
            "get": {
                "operationId": "divisions_list",
                "description": "A `division` resource provides the capability to group crew and events for reporting, filtering, and calendaring.     It is specific to the company and mainly used by larger enterprises.",
                "parameters": [
                    {
                        "name": "external_code",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "db_date_updated__gt",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "db_date_updated__lt",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Division"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "divisions"
                ]
            },
            "post": {
                "operationId": "divisions_create",
                "description": "A `division` resource provides the capability to group crew and events for reporting, filtering, and calendaring.     It is specific to the company and mainly used by larger enterprises.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Division"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Division"
                        }
                    }
                },
                "tags": [
                    "divisions"
                ]
            },
            "parameters": []
        },
        "/divisions/{id}": {
            "get": {
                "operationId": "divisions_read",
                "description": "A `division` resource provides the capability to group crew and events for reporting, filtering, and calendaring.     It is specific to the company and mainly used by larger enterprises.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Division"
                        }
                    }
                },
                "tags": [
                    "divisions"
                ]
            },
            "put": {
                "operationId": "divisions_update",
                "description": "A `division` resource provides the capability to group crew and events for reporting, filtering, and calendaring.     It is specific to the company and mainly used by larger enterprises.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Division"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Division"
                        }
                    }
                },
                "tags": [
                    "divisions"
                ]
            },
            "patch": {
                "operationId": "divisions_partial_update",
                "description": "A `division` resource provides the capability to group crew and events for reporting, filtering, and calendaring.     It is specific to the company and mainly used by larger enterprises.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Division"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Division"
                        }
                    }
                },
                "tags": [
                    "divisions"
                ]
            },
            "delete": {
                "operationId": "divisions_delete",
                "description": "A `division` resource provides the capability to group crew and events for reporting, filtering, and calendaring.     It is specific to the company and mainly used by larger enterprises.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "divisions"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "The LASSO unique identifier for this resource.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/event_account_user_role_relationships": {
            "get": {
                "operationId": "event_account_user_role_relationships_list",
                "description": "",
                "parameters": [
                    {
                        "name": "event",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "account_user_role",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "db_date_updated__gt",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "db_date_updated__lt",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/EventAccountUserRoleRelationship"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "event_account_user_role_relationships"
                ]
            },
            "post": {
                "operationId": "event_account_user_role_relationships_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EventAccountUserRoleRelationship"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EventAccountUserRoleRelationship"
                        }
                    }
                },
                "tags": [
                    "event_account_user_role_relationships"
                ]
            },
            "parameters": []
        },
        "/event_account_user_role_relationships/{id}": {
            "get": {
                "operationId": "event_account_user_role_relationships_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EventAccountUserRoleRelationship"
                        }
                    }
                },
                "tags": [
                    "event_account_user_role_relationships"
                ]
            },
            "put": {
                "operationId": "event_account_user_role_relationships_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EventAccountUserRoleRelationship"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EventAccountUserRoleRelationship"
                        }
                    }
                },
                "tags": [
                    "event_account_user_role_relationships"
                ]
            },
            "patch": {
                "operationId": "event_account_user_role_relationships_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EventAccountUserRoleRelationship"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EventAccountUserRoleRelationship"
                        }
                    }
                },
                "tags": [
                    "event_account_user_role_relationships"
                ]
            },
            "delete": {
                "operationId": "event_account_user_role_relationships_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "event_account_user_role_relationships"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "The LASSO unique identifier for this resource.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/event_collections": {
            "get": {
                "operationId": "event_collections_list",
                "description": "The event_collections resource represents the event tours you are managing for your client.",
                "parameters": [
                    {
                        "name": "code",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "external_code",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "db_date_updated__gt",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "db_date_updated__lt",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "date_begin__gt",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "date_begin__lt",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "date_end__gt",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "date_end__lt",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/EventCollection"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "event_collections"
                ]
            },
            "post": {
                "operationId": "event_collections_create",
                "description": "The event_collections resource represents the event tours you are managing for your client.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EventCollection"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EventCollection"
                        }
                    }
                },
                "tags": [
                    "event_collections"
                ]
            },
            "parameters": []
        },
        "/event_collections/{id}": {
            "get": {
                "operationId": "event_collections_read",
                "description": "The event_collections resource represents the event tours you are managing for your client.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EventCollection"
                        }
                    }
                },
                "tags": [
                    "event_collections"
                ]
            },
            "put": {
                "operationId": "event_collections_update",
                "description": "The event_collections resource represents the event tours you are managing for your client.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EventCollection"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EventCollection"
                        }
                    }
                },
                "tags": [
                    "event_collections"
                ]
            },
            "patch": {
                "operationId": "event_collections_partial_update",
                "description": "The event_collections resource represents the event tours you are managing for your client.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EventCollection"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EventCollection"
                        }
                    }
                },
                "tags": [
                    "event_collections"
                ]
            },
            "delete": {
                "operationId": "event_collections_delete",
                "description": "The event_collections resource represents the event tours you are managing for your client.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "event_collections"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "The LASSO unique identifier for this resource.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/event_groups": {
            "get": {
                "operationId": "event_groups_list",
                "description": "",
                "parameters": [
                    {
                        "name": "event",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "venue",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "db_date_updated__gt",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "db_date_updated__lt",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/EventGroup"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "event_groups"
                ]
            },
            "post": {
                "operationId": "event_groups_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EventGroup"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EventGroup"
                        }
                    }
                },
                "tags": [
                    "event_groups"
                ]
            },
            "parameters": []
        },
        "/event_groups/{id}": {
            "get": {
                "operationId": "event_groups_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EventGroup"
                        }
                    }
                },
                "tags": [
                    "event_groups"
                ]
            },
            "put": {
                "operationId": "event_groups_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EventGroup"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EventGroup"
                        }
                    }
                },
                "tags": [
                    "event_groups"
                ]
            },
            "patch": {
                "operationId": "event_groups_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EventGroup"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EventGroup"
                        }
                    }
                },
                "tags": [
                    "event_groups"
                ]
            },
            "delete": {
                "operationId": "event_groups_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "event_groups"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "The LASSO unique identifier for this resource.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/event_notes": {
            "post": {
                "operationId": "event_notes_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EventNote"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EventNote"
                        }
                    }
                },
                "tags": [
                    "event_notes"
                ]
            },
            "parameters": []
        },
        "/event_notes/{id}": {
            "get": {
                "operationId": "event_notes_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EventNote"
                        }
                    }
                },
                "tags": [
                    "event_notes"
                ]
            },
            "put": {
                "operationId": "event_notes_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EventNote"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EventNote"
                        }
                    }
                },
                "tags": [
                    "event_notes"
                ]
            },
            "patch": {
                "operationId": "event_notes_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EventNote"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EventNote"
                        }
                    }
                },
                "tags": [
                    "event_notes"
                ]
            },
            "delete": {
                "operationId": "event_notes_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "event_notes"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "The LASSO unique identifier for this resource.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/event_positions": {
            "get": {
                "operationId": "event_positions_list",
                "description": "event_position represents an `event`'s need for a \"kind of work\" (as described by `position`).",
                "parameters": [
                    {
                        "name": "external_code",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/EventPosition"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "event_positions"
                ]
            },
            "post": {
                "operationId": "event_positions_create",
                "description": "event_position represents an `event`'s need for a \"kind of work\" (as described by `position`).",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EventPosition"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EventPosition"
                        }
                    }
                },
                "tags": [
                    "event_positions"
                ]
            },
            "parameters": []
        },
        "/event_positions/{id}": {
            "get": {
                "operationId": "event_positions_read",
                "description": "event_position represents an `event`'s need for a \"kind of work\" (as described by `position`).",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EventPosition"
                        }
                    }
                },
                "tags": [
                    "event_positions"
                ]
            },
            "put": {
                "operationId": "event_positions_update",
                "description": "event_position represents an `event`'s need for a \"kind of work\" (as described by `position`).",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EventPosition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EventPosition"
                        }
                    }
                },
                "tags": [
                    "event_positions"
                ]
            },
            "patch": {
                "operationId": "event_positions_partial_update",
                "description": "event_position represents an `event`'s need for a \"kind of work\" (as described by `position`).",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EventPosition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EventPosition"
                        }
                    }
                },
                "tags": [
                    "event_positions"
                ]
            },
            "delete": {
                "operationId": "event_positions_delete",
                "description": "event_position represents an `event`'s need for a \"kind of work\" (as described by `position`).",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "event_positions"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "The LASSO unique identifier for this resource.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/event_roles": {
            "get": {
                "operationId": "event_roles_list",
                "description": "",
                "parameters": [
                    {
                        "name": "event",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "group",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "role",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "crew",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "db_date_updated__gt",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "db_date_updated__lt",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/EventRole"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "event_roles"
                ]
            },
            "post": {
                "operationId": "event_roles_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EventRole"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EventRole"
                        }
                    }
                },
                "tags": [
                    "event_roles"
                ]
            },
            "parameters": []
        },
        "/event_roles/{id}": {
            "get": {
                "operationId": "event_roles_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EventRole"
                        }
                    }
                },
                "tags": [
                    "event_roles"
                ]
            },
            "put": {
                "operationId": "event_roles_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EventRole"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EventRole"
                        }
                    }
                },
                "tags": [
                    "event_roles"
                ]
            },
            "patch": {
                "operationId": "event_roles_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EventRole"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EventRole"
                        }
                    }
                },
                "tags": [
                    "event_roles"
                ]
            },
            "delete": {
                "operationId": "event_roles_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "event_roles"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "The LASSO unique identifier for this resource.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/event_roster_positions": {
            "get": {
                "operationId": "event_roster_positions_list",
                "description": "`event_roster_position` represents a `crew`'s work for an `event_position` within an `event_group` on an `event`.\nAn `event`'s collection of related `event_roster_positions` is collectively called the `event`'s \"roster\".\nA `crew` may be assigned only one `event_roster_position` per `event_position`,\nbut may be assigned multiple `event_roster_positions` for various `event_position`s within an `event`.\nA `crew` must have an an \"approved\" `crew_position` whose `position` matches the `event_position`'s `position`,\nin order to be eligible to work for that `event_position`.",
                "parameters": [
                    {
                        "name": "event",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "event_position",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "crew",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "db_date_updated__gt",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "db_date_updated__lt",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/EventRosterPosition"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "event_roster_positions"
                ]
            },
            "post": {
                "operationId": "event_roster_positions_create",
                "description": "`event_roster_position` represents a `crew`'s work for an `event_position` within an `event_group` on an `event`.\nAn `event`'s collection of related `event_roster_positions` is collectively called the `event`'s \"roster\".\nA `crew` may be assigned only one `event_roster_position` per `event_position`,\nbut may be assigned multiple `event_roster_positions` for various `event_position`s within an `event`.\nA `crew` must have an an \"approved\" `crew_position` whose `position` matches the `event_position`'s `position`,\nin order to be eligible to work for that `event_position`.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EventRosterPosition"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EventRosterPosition"
                        }
                    }
                },
                "tags": [
                    "event_roster_positions"
                ]
            },
            "parameters": []
        },
        "/event_roster_positions/{id}": {
            "get": {
                "operationId": "event_roster_positions_read",
                "description": "`event_roster_position` represents a `crew`'s work for an `event_position` within an `event_group` on an `event`.\nAn `event`'s collection of related `event_roster_positions` is collectively called the `event`'s \"roster\".\nA `crew` may be assigned only one `event_roster_position` per `event_position`,\nbut may be assigned multiple `event_roster_positions` for various `event_position`s within an `event`.\nA `crew` must have an an \"approved\" `crew_position` whose `position` matches the `event_position`'s `position`,\nin order to be eligible to work for that `event_position`.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EventRosterPosition"
                        }
                    }
                },
                "tags": [
                    "event_roster_positions"
                ]
            },
            "put": {
                "operationId": "event_roster_positions_update",
                "description": "`event_roster_position` represents a `crew`'s work for an `event_position` within an `event_group` on an `event`.\nAn `event`'s collection of related `event_roster_positions` is collectively called the `event`'s \"roster\".\nA `crew` may be assigned only one `event_roster_position` per `event_position`,\nbut may be assigned multiple `event_roster_positions` for various `event_position`s within an `event`.\nA `crew` must have an an \"approved\" `crew_position` whose `position` matches the `event_position`'s `position`,\nin order to be eligible to work for that `event_position`.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EventRosterPosition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EventRosterPosition"
                        }
                    }
                },
                "tags": [
                    "event_roster_positions"
                ]
            },
            "patch": {
                "operationId": "event_roster_positions_partial_update",
                "description": "`event_roster_position` represents a `crew`'s work for an `event_position` within an `event_group` on an `event`.\nAn `event`'s collection of related `event_roster_positions` is collectively called the `event`'s \"roster\".\nA `crew` may be assigned only one `event_roster_position` per `event_position`,\nbut may be assigned multiple `event_roster_positions` for various `event_position`s within an `event`.\nA `crew` must have an an \"approved\" `crew_position` whose `position` matches the `event_position`'s `position`,\nin order to be eligible to work for that `event_position`.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EventRosterPosition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EventRosterPosition"
                        }
                    }
                },
                "tags": [
                    "event_roster_positions"
                ]
            },
            "delete": {
                "operationId": "event_roster_positions_delete",
                "description": "`event_roster_position` represents a `crew`'s work for an `event_position` within an `event_group` on an `event`.\nAn `event`'s collection of related `event_roster_positions` is collectively called the `event`'s \"roster\".\nA `crew` may be assigned only one `event_roster_position` per `event_position`,\nbut may be assigned multiple `event_roster_positions` for various `event_position`s within an `event`.\nA `crew` must have an an \"approved\" `crew_position` whose `position` matches the `event_position`'s `position`,\nin order to be eligible to work for that `event_position`.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "event_roster_positions"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "The LASSO unique identifier for this resource.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/events": {
            "get": {
                "operationId": "events_list",
                "description": "The events resource represents the events you are managing and crewing for your client.     The events resource is one of the four main resources in the LASSO REST API.     The events resource has many related one-to-many resources that organize the positions, roles, and rosters     for your event.",
                "parameters": [
                    {
                        "name": "code",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "external_code",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "db_date_updated__gt",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "db_date_updated__lt",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "date_begin__gt",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "date_begin__lt",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "date_end__gt",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "date_end__lt",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "date_changed__gt",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "date_changed__lt",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Event"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "events"
                ]
            },
            "post": {
                "operationId": "events_create",
                "description": "The events resource represents the events you are managing and crewing for your client.     The events resource is one of the four main resources in the LASSO REST API.     The events resource has many related one-to-many resources that organize the positions, roles, and rosters     for your event.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Event"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Event"
                        }
                    }
                },
                "tags": [
                    "events"
                ]
            },
            "parameters": []
        },
        "/events/{id}": {
            "get": {
                "operationId": "events_read",
                "description": "The events resource represents the events you are managing and crewing for your client.     The events resource is one of the four main resources in the LASSO REST API.     The events resource has many related one-to-many resources that organize the positions, roles, and rosters     for your event.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Event"
                        }
                    }
                },
                "tags": [
                    "events"
                ]
            },
            "put": {
                "operationId": "events_update",
                "description": "The events resource represents the events you are managing and crewing for your client.     The events resource is one of the four main resources in the LASSO REST API.     The events resource has many related one-to-many resources that organize the positions, roles, and rosters     for your event.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Event"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Event"
                        }
                    }
                },
                "tags": [
                    "events"
                ]
            },
            "patch": {
                "operationId": "events_partial_update",
                "description": "The events resource represents the events you are managing and crewing for your client.     The events resource is one of the four main resources in the LASSO REST API.     The events resource has many related one-to-many resources that organize the positions, roles, and rosters     for your event.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Event"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Event"
                        }
                    }
                },
                "tags": [
                    "events"
                ]
            },
            "delete": {
                "operationId": "events_delete",
                "description": "The events resource represents the events you are managing and crewing for your client.     The events resource is one of the four main resources in the LASSO REST API.     The events resource has many related one-to-many resources that organize the positions, roles, and rosters     for your event.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "events"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "The LASSO unique identifier for this resource.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/markets": {
            "get": {
                "operationId": "markets_list",
                "description": "`market` is a LASSO-proprietary representation of a geographical area,      different from `airport`, city, state or zip used to determine whether crew is \u201clocal\u201d to an `event`.      The system may associate one or more `airport`s with a `market`, and a company may associate `crew`      with one or more `market`s, besides their `nearest_airport`. The system considers `crew` as \u201clocal\u201d to an `event`      whose `nearest_airport` (or any other `airport` in that `airport`\u2019s market) matches any `airport` associated      with their local `market`s. (For example: The system considers `crew` associated with the \u201cNew York City\u201d      `market` \u201clocal\u201d to `event`s nearest to either LaGuardia or JFK airports.)",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Market"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "markets"
                ]
            },
            "parameters": []
        },
        "/markets/{id}": {
            "get": {
                "operationId": "markets_read",
                "description": "`market` is a LASSO-proprietary representation of a geographical area,      different from `airport`, city, state or zip used to determine whether crew is \u201clocal\u201d to an `event`.      The system may associate one or more `airport`s with a `market`, and a company may associate `crew`      with one or more `market`s, besides their `nearest_airport`. The system considers `crew` as \u201clocal\u201d to an `event`      whose `nearest_airport` (or any other `airport` in that `airport`\u2019s market) matches any `airport` associated      with their local `market`s. (For example: The system considers `crew` associated with the \u201cNew York City\u201d      `market` \u201clocal\u201d to `event`s nearest to either LaGuardia or JFK airports.)",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Market"
                        }
                    }
                },
                "tags": [
                    "markets"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "The LASSO unique identifier for this resource.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/positions": {
            "get": {
                "operationId": "positions_list",
                "description": "",
                "parameters": [
                    {
                        "name": "external_code",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "import_name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "db_date_updated__gt",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "db_date_updated__lt",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Position"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "positions"
                ]
            },
            "post": {
                "operationId": "positions_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Position"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Position"
                        }
                    }
                },
                "tags": [
                    "positions"
                ]
            },
            "parameters": []
        },
        "/positions/{id}": {
            "get": {
                "operationId": "positions_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Position"
                        }
                    }
                },
                "tags": [
                    "positions"
                ]
            },
            "put": {
                "operationId": "positions_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Position"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Position"
                        }
                    }
                },
                "tags": [
                    "positions"
                ]
            },
            "patch": {
                "operationId": "positions_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Position"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Position"
                        }
                    }
                },
                "tags": [
                    "positions"
                ]
            },
            "delete": {
                "operationId": "positions_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "positions"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "The LASSO unique identifier for this resource.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/schedule_entries": {
            "get": {
                "operationId": "schedule_entries_list",
                "description": "`schedule_entry` describes a shift associated with an event position.     A `schedule_entry` can represent a normal shift, a dark day, or a travel day.",
                "parameters": [
                    {
                        "name": "external_code",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "db_date_updated__gt",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "db_date_updated__lt",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "utc_start__gt",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "utc_start__lt",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "utc_end__gt",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "utc_end__lt",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ScheduleEntry"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "schedule_entries"
                ]
            },
            "post": {
                "operationId": "schedule_entries_create",
                "description": "`schedule_entry` describes a shift associated with an event position.     A `schedule_entry` can represent a normal shift, a dark day, or a travel day.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ScheduleEntry"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ScheduleEntry"
                        }
                    }
                },
                "tags": [
                    "schedule_entries"
                ]
            },
            "parameters": []
        },
        "/schedule_entries/{id}": {
            "get": {
                "operationId": "schedule_entries_read",
                "description": "`schedule_entry` describes a shift associated with an event position.     A `schedule_entry` can represent a normal shift, a dark day, or a travel day.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ScheduleEntry"
                        }
                    }
                },
                "tags": [
                    "schedule_entries"
                ]
            },
            "put": {
                "operationId": "schedule_entries_update",
                "description": "`schedule_entry` describes a shift associated with an event position.     A `schedule_entry` can represent a normal shift, a dark day, or a travel day.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ScheduleEntry"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ScheduleEntry"
                        }
                    }
                },
                "tags": [
                    "schedule_entries"
                ]
            },
            "patch": {
                "operationId": "schedule_entries_partial_update",
                "description": "`schedule_entry` describes a shift associated with an event position.     A `schedule_entry` can represent a normal shift, a dark day, or a travel day.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ScheduleEntry"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ScheduleEntry"
                        }
                    }
                },
                "tags": [
                    "schedule_entries"
                ]
            },
            "delete": {
                "operationId": "schedule_entries_delete",
                "description": "`schedule_entry` describes a shift associated with an event position.     A `schedule_entry` can represent a normal shift, a dark day, or a travel day.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "schedule_entries"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "The LASSO unique identifier for this resource.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/tags": {
            "get": {
                "operationId": "tags_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Tag"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "tags"
                ]
            },
            "post": {
                "operationId": "tags_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Tag"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Tag"
                        }
                    }
                },
                "tags": [
                    "tags"
                ]
            },
            "parameters": []
        },
        "/tags/{id}": {
            "get": {
                "operationId": "tags_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Tag"
                        }
                    }
                },
                "tags": [
                    "tags"
                ]
            },
            "put": {
                "operationId": "tags_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Tag"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Tag"
                        }
                    }
                },
                "tags": [
                    "tags"
                ]
            },
            "patch": {
                "operationId": "tags_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Tag"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Tag"
                        }
                    }
                },
                "tags": [
                    "tags"
                ]
            },
            "delete": {
                "operationId": "tags_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "tags"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "The LASSO unique identifier for this resource.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/timezones": {
            "get": {
                "operationId": "timezones_list",
                "description": "An `timezone` resource represents the timezone for a time field.     `timezone` resources are system defined and read-only.",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Timezone"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "timezones"
                ]
            },
            "parameters": []
        },
        "/timezones/{id}": {
            "get": {
                "operationId": "timezones_read",
                "description": "An `timezone` resource represents the timezone for a time field.     `timezone` resources are system defined and read-only.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Timezone"
                        }
                    }
                },
                "tags": [
                    "timezones"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique value identifying this timezone.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/vendors": {
            "get": {
                "operationId": "vendors_list",
                "description": "`vendor` represents an external company, union, or other organization that provides staff or services for an event.",
                "parameters": [
                    {
                        "name": "external_code",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "db_date_updated__gt",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "db_date_updated__lt",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Vendor"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "vendors"
                ]
            },
            "post": {
                "operationId": "vendors_create",
                "description": "`vendor` represents an external company, union, or other organization that provides staff or services for an event.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Vendor"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Vendor"
                        }
                    }
                },
                "tags": [
                    "vendors"
                ]
            },
            "parameters": []
        },
        "/vendors/{id}": {
            "get": {
                "operationId": "vendors_read",
                "description": "`vendor` represents an external company, union, or other organization that provides staff or services for an event.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Vendor"
                        }
                    }
                },
                "tags": [
                    "vendors"
                ]
            },
            "put": {
                "operationId": "vendors_update",
                "description": "`vendor` represents an external company, union, or other organization that provides staff or services for an event.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Vendor"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Vendor"
                        }
                    }
                },
                "tags": [
                    "vendors"
                ]
            },
            "patch": {
                "operationId": "vendors_partial_update",
                "description": "`vendor` represents an external company, union, or other organization that provides staff or services for an event.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Vendor"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Vendor"
                        }
                    }
                },
                "tags": [
                    "vendors"
                ]
            },
            "delete": {
                "operationId": "vendors_delete",
                "description": "`vendor` represents an external company, union, or other organization that provides staff or services for an event.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "vendors"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "The LASSO unique identifier for this resource.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/venue_contacts": {
            "post": {
                "operationId": "venue_contacts_create",
                "description": "`venue_contact` is contact information for entities associated with a `venue`.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/VenueContact"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/VenueContact"
                        }
                    }
                },
                "tags": [
                    "venue_contacts"
                ]
            },
            "parameters": []
        },
        "/venue_contacts/{id}": {
            "get": {
                "operationId": "venue_contacts_read",
                "description": "`venue_contact` is contact information for entities associated with a `venue`.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/VenueContact"
                        }
                    }
                },
                "tags": [
                    "venue_contacts"
                ]
            },
            "put": {
                "operationId": "venue_contacts_update",
                "description": "`venue_contact` is contact information for entities associated with a `venue`.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/VenueContact"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/VenueContact"
                        }
                    }
                },
                "tags": [
                    "venue_contacts"
                ]
            },
            "patch": {
                "operationId": "venue_contacts_partial_update",
                "description": "`venue_contact` is contact information for entities associated with a `venue`.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/VenueContact"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/VenueContact"
                        }
                    }
                },
                "tags": [
                    "venue_contacts"
                ]
            },
            "delete": {
                "operationId": "venue_contacts_delete",
                "description": "`venue_contact` is contact information for entities associated with a `venue`.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "venue_contacts"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "The LASSO unique identifier for this resource.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/venue_notes": {
            "post": {
                "operationId": "venue_notes_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/VenueNote"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/VenueNote"
                        }
                    }
                },
                "tags": [
                    "venue_notes"
                ]
            },
            "parameters": []
        },
        "/venue_notes/{id}": {
            "get": {
                "operationId": "venue_notes_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/VenueNote"
                        }
                    }
                },
                "tags": [
                    "venue_notes"
                ]
            },
            "put": {
                "operationId": "venue_notes_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/VenueNote"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/VenueNote"
                        }
                    }
                },
                "tags": [
                    "venue_notes"
                ]
            },
            "patch": {
                "operationId": "venue_notes_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/VenueNote"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/VenueNote"
                        }
                    }
                },
                "tags": [
                    "venue_notes"
                ]
            },
            "delete": {
                "operationId": "venue_notes_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "venue_notes"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "The LASSO unique identifier for this resource.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/venue_rooms": {
            "post": {
                "operationId": "venue_rooms_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/VenueRoom"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/VenueRoom"
                        }
                    }
                },
                "tags": [
                    "venue_rooms"
                ]
            },
            "parameters": []
        },
        "/venue_rooms/{id}": {
            "get": {
                "operationId": "venue_rooms_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/VenueRoom"
                        }
                    }
                },
                "tags": [
                    "venue_rooms"
                ]
            },
            "put": {
                "operationId": "venue_rooms_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/VenueRoom"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/VenueRoom"
                        }
                    }
                },
                "tags": [
                    "venue_rooms"
                ]
            },
            "patch": {
                "operationId": "venue_rooms_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/VenueRoom"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/VenueRoom"
                        }
                    }
                },
                "tags": [
                    "venue_rooms"
                ]
            },
            "delete": {
                "operationId": "venue_rooms_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "venue_rooms"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "The LASSO unique identifier for this resource.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/venues": {
            "get": {
                "operationId": "venues_list",
                "description": "The `venue` resource is a location in which an event takes place.     The resource also includes contact, address, and other information     pertaining to the `venue`.",
                "parameters": [
                    {
                        "name": "external_code",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "code",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "db_date_updated__gt",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "db_date_updated__lt",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Venue"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "venues"
                ]
            },
            "post": {
                "operationId": "venues_create",
                "description": "The `venue` resource is a location in which an event takes place.     The resource also includes contact, address, and other information     pertaining to the `venue`.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Venue"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Venue"
                        }
                    }
                },
                "tags": [
                    "venues"
                ]
            },
            "parameters": []
        },
        "/venues/{id}": {
            "get": {
                "operationId": "venues_read",
                "description": "The `venue` resource is a location in which an event takes place.     The resource also includes contact, address, and other information     pertaining to the `venue`.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Venue"
                        }
                    }
                },
                "tags": [
                    "venues"
                ]
            },
            "put": {
                "operationId": "venues_update",
                "description": "The `venue` resource is a location in which an event takes place.     The resource also includes contact, address, and other information     pertaining to the `venue`.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Venue"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Venue"
                        }
                    }
                },
                "tags": [
                    "venues"
                ]
            },
            "patch": {
                "operationId": "venues_partial_update",
                "description": "The `venue` resource is a location in which an event takes place.     The resource also includes contact, address, and other information     pertaining to the `venue`.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Venue"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Venue"
                        }
                    }
                },
                "tags": [
                    "venues"
                ]
            },
            "delete": {
                "operationId": "venues_delete",
                "description": "The `venue` resource is a location in which an event takes place.     The resource also includes contact, address, and other information     pertaining to the `venue`.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "venues"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "The LASSO unique identifier for this resource.",
                    "required": true,
                    "type": "integer"
                }
            ]
        }
    },
    "definitions": {
        "AccountEventStatus": {
            "required": [
                "name",
                "slug"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "description": "The LASSO unique identifier for this resource.",
                    "type": "integer",
                    "readOnly": true
                },
                "db_date_created": {
                    "title": "Db date created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "db_date_updated": {
                    "title": "Db date updated",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "external_code": {
                    "title": "External code",
                    "description": "External code from other systems to track status",
                    "type": "string",
                    "maxLength": 50,
                    "x-nullable": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "slug": {
                    "title": "Slug",
                    "type": "string",
                    "format": "slug",
                    "pattern": "^[-a-zA-Z0-9_]+$",
                    "maxLength": 50,
                    "minLength": 1
                },
                "description": {
                    "title": "Description",
                    "type": "string"
                }
            }
        },
        "AccountUserRole": {
            "required": [
                "role",
                "user",
                "code"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "description": "The LASSO unique identifier for this resource.",
                    "type": "integer",
                    "readOnly": true
                },
                "role": {
                    "title": "Role",
                    "type": "string",
                    "enum": [
                        "labor_coordinator",
                        "marketplace_specialist",
                        "marketplace_finance_admin",
                        "schedule_display"
                    ]
                },
                "user": {
                    "title": "User",
                    "type": "integer"
                },
                "status": {
                    "title": "Status",
                    "type": "string",
                    "enum": [
                        "active",
                        "inactive"
                    ]
                },
                "code": {
                    "title": "Code",
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 1
                },
                "email": {
                    "title": "Email",
                    "type": "string",
                    "format": "email",
                    "maxLength": 254,
                    "x-nullable": true
                },
                "phone": {
                    "title": "Phone",
                    "type": "string",
                    "maxLength": 30,
                    "x-nullable": true
                }
            }
        },
        "Market": {
            "title": "Market",
            "required": [
                "name",
                "primary_city"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "description": "The LASSO unique identifier for this resource.",
                    "type": "integer",
                    "readOnly": true
                },
                "db_date_created": {
                    "title": "Db date created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "db_date_updated": {
                    "title": "Db date updated",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "description": "the display name of the `market`. This may include the country or state name, to help clarify between similarly-named `market`s (ie \"Barcelona, Spain\", and \"Barcelona, Venezuela\").",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "primary_city": {
                    "title": "Primary city",
                    "description": "The name of a `market`'s primary city. (e.g. \"Columbus\" for `market` \"Columbus / West Point / Starkville\").",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                }
            },
            "description": "A `market` is a geographic region."
        },
        "Airport": {
            "required": [
                "id",
                "iata_code",
                "icao_code",
                "name",
                "market",
                "city"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "description": "The LASSO unique identifier for the `airport` resource.",
                    "type": "string",
                    "maxLength": 4,
                    "minLength": 1
                },
                "iata_code": {
                    "title": "Iata code",
                    "description": "International Air Transport Association location identification code.",
                    "type": "string",
                    "maxLength": 4,
                    "minLength": 1
                },
                "faa_code": {
                    "title": "Faa code",
                    "description": "Federal Aviation Administration identification code.",
                    "type": "string",
                    "maxLength": 3,
                    "x-nullable": true
                },
                "icao_code": {
                    "title": "Icao code",
                    "description": "International Civil Aviation Organization location identification code.",
                    "type": "string",
                    "maxLength": 4,
                    "minLength": 1
                },
                "name": {
                    "title": "Name",
                    "description": "The full name of the `airport`.",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "alternates": {
                    "title": "Alternates",
                    "description": "Common alternate names or spellings of `airport`.",
                    "type": "string",
                    "maxLength": 256,
                    "x-nullable": true
                },
                "market": {
                    "$ref": "#/definitions/Market"
                },
                "city": {
                    "title": "City",
                    "description": "The city in which the `airport` resides.",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "region": {
                    "title": "Region",
                    "description": "For airports in the USA/Canada: the state/province in which the `airport` resides.",
                    "type": "string",
                    "maxLength": 100,
                    "x-nullable": true
                },
                "latitude": {
                    "title": "Latitude",
                    "description": "The latitudinal position of the `airport`.",
                    "type": "string",
                    "format": "decimal",
                    "x-nullable": true
                },
                "longitude": {
                    "title": "Longitude",
                    "description": "The longitudinal position of the `airport`.",
                    "type": "string",
                    "format": "decimal",
                    "x-nullable": true
                },
                "altitude": {
                    "title": "Altitude",
                    "description": "The `airport`'s height above sea level in feet.",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "x-nullable": true
                },
                "sequence": {
                    "title": "Sequence",
                    "description": "Used to help prioritize search results. Higher numbers will show higher in the list.",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                }
            }
        },
        "ClientAddress": {
            "required": [
                "client",
                "airport"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "description": "The LASSO unique identifier for this resource.",
                    "type": "integer",
                    "readOnly": true
                },
                "db_date_created": {
                    "title": "Db date created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "db_date_updated": {
                    "title": "Db date updated",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "client": {
                    "title": "Client",
                    "type": "integer"
                },
                "status": {
                    "title": "Status",
                    "type": "string",
                    "enum": [
                        "active",
                        "inactive",
                        "deleted"
                    ]
                },
                "type": {
                    "title": "Type",
                    "type": "string",
                    "enum": [
                        "main",
                        "billing",
                        "shipping",
                        "other"
                    ]
                },
                "contact_name": {
                    "title": "Contact name",
                    "description": "The name of a contact person associated with the resource.",
                    "type": "string",
                    "maxLength": 100,
                    "x-nullable": true
                },
                "company_name": {
                    "title": "Company name",
                    "description": "The name of a company associated with the resource.",
                    "type": "string",
                    "maxLength": 100,
                    "x-nullable": true
                },
                "street1": {
                    "title": "Street1",
                    "description": "The first line of the street address associated with the resource.",
                    "type": "string",
                    "maxLength": 256,
                    "x-nullable": true
                },
                "street2": {
                    "title": "Street2",
                    "description": "The second line of the street address associated with the resource.",
                    "type": "string",
                    "maxLength": 256,
                    "x-nullable": true
                },
                "street3": {
                    "title": "Street3",
                    "description": "The third line of the street address associated with the resource.",
                    "type": "string",
                    "maxLength": 256,
                    "x-nullable": true
                },
                "locality": {
                    "title": "Locality",
                    "description": "The primary location in which the resource resides.         For USA/Canada: the city.",
                    "type": "string",
                    "maxLength": 100,
                    "x-nullable": true
                },
                "region": {
                    "title": "Region",
                    "description": "For resources in the USA/Canada: the state/province in which the resource resides.",
                    "type": "string",
                    "maxLength": 100,
                    "x-nullable": true
                },
                "postal_code": {
                    "title": "Postal code",
                    "description": "The resource\u2019s mail sorting code.",
                    "type": "string",
                    "maxLength": 20,
                    "x-nullable": true
                },
                "phone": {
                    "title": "Phone",
                    "description": "The resource\u2019s phone number.",
                    "type": "string",
                    "maxLength": 30,
                    "x-nullable": true
                },
                "airport": {
                    "title": "Airport",
                    "type": "string"
                },
                "market": {
                    "title": "Market",
                    "description": "The unique identifier of the `market` which represents the resource location.",
                    "type": "integer",
                    "x-nullable": true
                }
            }
        },
        "ClientContact": {
            "required": [
                "client"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "description": "The LASSO unique identifier for this resource.",
                    "type": "integer",
                    "readOnly": true
                },
                "db_date_created": {
                    "title": "Db date created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "db_date_updated": {
                    "title": "Db date updated",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "type": {
                    "title": "Type",
                    "description": "Type of contact. Choices: main, billing, shipping, other, ",
                    "type": "string",
                    "enum": [
                        "main",
                        "billing",
                        "shipping",
                        "other"
                    ]
                },
                "client": {
                    "title": "Client",
                    "type": "integer"
                },
                "first_name": {
                    "title": "First name",
                    "description": "`contact`'s first name.",
                    "type": "string",
                    "maxLength": 100,
                    "x-nullable": true
                },
                "last_name": {
                    "title": "Last name",
                    "description": "`contact`'s last name. A ClientContact displays in lists as: \"First name Last name\", or \"Last name\" or \"First name\", or \"{type} Contact\".",
                    "type": "string",
                    "maxLength": 100,
                    "x-nullable": true
                },
                "email": {
                    "title": "Email",
                    "description": "`contact`'s email address. For the earliest-created ClientContact of type \"main\", this email will display on the client list as the primary Client email address.",
                    "type": "string",
                    "format": "email",
                    "maxLength": 256,
                    "x-nullable": true
                },
                "mobile": {
                    "title": "Mobile",
                    "description": "`contact`'s mobile phone number.",
                    "type": "string",
                    "maxLength": 30,
                    "x-nullable": true
                },
                "phone": {
                    "title": "Phone",
                    "description": "`contact`'s phone number. For the earliest-created ClientContact of type \"main\", this phone will display on the client list as the primary Client phone number.",
                    "type": "string",
                    "maxLength": 30,
                    "x-nullable": true
                },
                "extension": {
                    "title": "Extension",
                    "description": "Extension for `contact`'s phone number.",
                    "type": "string",
                    "maxLength": 20,
                    "x-nullable": true
                },
                "fax": {
                    "title": "Fax",
                    "description": "`contact`'s fax number.",
                    "type": "string",
                    "maxLength": 30,
                    "x-nullable": true
                },
                "job_title": {
                    "title": "Job title",
                    "description": "`contact`'s job title.",
                    "type": "string",
                    "maxLength": 100,
                    "x-nullable": true
                }
            }
        },
        "Client": {
            "required": [
                "name"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "description": "The LASSO unique identifier for this resource.",
                    "type": "integer",
                    "readOnly": true
                },
                "db_date_created": {
                    "title": "Db date created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "db_date_updated": {
                    "title": "Db date updated",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "code": {
                    "title": "Code",
                    "description": "An autogenerated, easy-to-read, and unique simple string to identify the `client`.",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "external_code": {
                    "title": "External code",
                    "description": "`Client` code supplied by the company.",
                    "type": "string",
                    "maxLength": 50,
                    "x-nullable": true
                },
                "name": {
                    "title": "Name",
                    "description": "The `name` of the client.",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                },
                "status": {
                    "title": "Status",
                    "description": "The `status` of this `client`. Choices: active, inactive, deleted.",
                    "type": "string",
                    "enum": [
                        "active",
                        "inactive",
                        "deleted"
                    ]
                },
                "url": {
                    "title": "Url",
                    "description": "A link to the client's website.",
                    "type": "string",
                    "format": "uri",
                    "maxLength": 200,
                    "x-nullable": true
                },
                "phone": {
                    "title": "Phone",
                    "description": "The `phone` number of the `client`.",
                    "type": "string",
                    "maxLength": 30,
                    "x-nullable": true
                },
                "contacts": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "readOnly": true,
                    "uniqueItems": true
                },
                "addresses": {
                    "description": "A list of the client's address information",
                    "type": "array",
                    "items": {
                        "description": "A list of the client's address information",
                        "type": "integer"
                    },
                    "readOnly": true,
                    "uniqueItems": true
                }
            }
        },
        "CrewAddress": {
            "description": "The physical addresses of this crew member.",
            "required": [
                "crew"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "description": "The LASSO unique identifier for this resource.",
                    "type": "integer",
                    "readOnly": true
                },
                "db_date_created": {
                    "title": "Db date created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "db_date_updated": {
                    "title": "Db date updated",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "crew": {
                    "title": "Crew",
                    "description": "The `crew` member id this address belongs to. This field is read only after it's been created.",
                    "type": "integer"
                },
                "status": {
                    "title": "Status",
                    "type": "string",
                    "enum": [
                        "active",
                        "inactive",
                        "deleted"
                    ]
                },
                "street1": {
                    "title": "Street1",
                    "description": "The first line of the street address associated with the resource.",
                    "type": "string",
                    "maxLength": 256,
                    "x-nullable": true
                },
                "street2": {
                    "title": "Street2",
                    "description": "The second line of the street address associated with the resource.",
                    "type": "string",
                    "maxLength": 256,
                    "x-nullable": true
                },
                "street3": {
                    "title": "Street3",
                    "description": "The third line of the street address associated with the resource.",
                    "type": "string",
                    "maxLength": 256,
                    "x-nullable": true
                },
                "locality": {
                    "title": "Locality",
                    "description": "The primary location in which the resource resides.         For USA/Canada: the city.",
                    "type": "string",
                    "maxLength": 100,
                    "x-nullable": true
                },
                "region": {
                    "title": "Region",
                    "description": "For resources in the USA/Canada: the state/province in which the resource resides.",
                    "type": "string",
                    "maxLength": 100,
                    "x-nullable": true
                },
                "postal_code": {
                    "title": "Postal code",
                    "description": "The resource\u2019s mail sorting code.",
                    "type": "string",
                    "maxLength": 20,
                    "x-nullable": true
                },
                "country": {
                    "title": "Country",
                    "type": "string",
                    "x-nullable": true
                }
            }
        },
        "CrewContact": {
            "description": "Emergency, referrral, and reference contacts for this `crew` member.",
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "description": "The LASSO unique identifier for this resource.",
                    "type": "integer",
                    "readOnly": true
                },
                "db_date_created": {
                    "title": "Db date created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "db_date_updated": {
                    "title": "Db date updated",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "type": {
                    "title": "Type",
                    "description": "Type of contact. Choices: main, work, home, billing, shipping, emergency, reference, referral, other, \n although only \"emergency\", \"referral\", and \"reference\" are exposed in LASSO as of 2019-02-01.",
                    "type": "string",
                    "enum": [
                        "main",
                        "work",
                        "home",
                        "billing",
                        "shipping",
                        "emergency",
                        "reference",
                        "referral",
                        "other"
                    ]
                },
                "first_name": {
                    "title": "First name",
                    "description": "`contact`'s first name.",
                    "type": "string",
                    "maxLength": 100,
                    "x-nullable": true
                },
                "last_name": {
                    "title": "Last name",
                    "description": "`contact`'s last name.",
                    "type": "string",
                    "maxLength": 100,
                    "x-nullable": true
                },
                "email": {
                    "title": "Email",
                    "description": "`contact`'s email address.",
                    "type": "string",
                    "format": "email",
                    "maxLength": 256,
                    "x-nullable": true
                },
                "phone": {
                    "title": "Phone",
                    "description": "`contact`'s phone number.",
                    "type": "string",
                    "maxLength": 30,
                    "x-nullable": true
                },
                "extension": {
                    "title": "Extension",
                    "description": "Extension for `contact`'s phone number. Only exposed for \"referral\" and \"reference\" types, not \"emergency\".",
                    "type": "string",
                    "maxLength": 20,
                    "x-nullable": true
                },
                "company_name": {
                    "title": "Company name",
                    "description": "`contact`'s company's name.",
                    "type": "string",
                    "maxLength": 256,
                    "x-nullable": true
                },
                "job_title": {
                    "title": "Job title",
                    "description": "`contact`'s job title. For \"emergency\" type, set value to \"Relationship\". The system does not use this field for \"referral\" and \"reference\" types.",
                    "type": "string",
                    "maxLength": 100,
                    "x-nullable": true
                }
            }
        },
        "CrewPosition": {
            "description": "The posiitons this `crew` member has been associated by working, applying, etc.",
            "required": [
                "crew",
                "position"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "description": "The LASSO unique identifier for this resource.",
                    "type": "integer",
                    "readOnly": true
                },
                "db_date_created": {
                    "title": "Db date created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "db_date_updated": {
                    "title": "Db date updated",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "crew": {
                    "title": "Crew",
                    "description": "The `crew` member id this crew position belongs to. This field is read only after it's been created.",
                    "type": "integer"
                },
                "position": {
                    "title": "Position",
                    "type": "integer"
                },
                "status": {
                    "title": "Status",
                    "description": "The status of this `crew`'s association with this `position`. Choices are:\n\"preregister\": As a `crew` navigates position application workflow, this status saves their work before they finish. Admin approval is NOT requested for preregister `crew_position`s.\n\"applied\": Indicates that `crew` has completed the application process for a company `position`. Requests admin approval. `crew` may cancel \"applied\" by revisiting the position application workflow.\n\"pending\" (default): Just like applied, but implies API or admin creation, rather than `crew` application. Requests admin approval, and cancellable by `crew`.\n\"approved\": `crew` has been approved, by an admin, to work this `position` for `event`s.\n\"denied\": This `crew` is not approved to work this `position` for `event`s. Implies that the `crew` applied. Resets \"date_approved\". `crew` may reapply for this position by revisiting the position application workflow.\n\"removed\": This `crew` is not approved to work this `position` for `event`s. Implies cancellation of a Pending or Applied status, or removal post-approval. Otherwise identical to \"denied\".",
                    "type": "string",
                    "enum": [
                        "preregister",
                        "pending",
                        "applied",
                        "approved",
                        "denied",
                        "removed"
                    ]
                },
                "date_applied": {
                    "title": "Date applied",
                    "description": "The UTC datetime when the `crew` applied for approval to work this `position` for `event`s.",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "date_approved": {
                    "title": "Date approved",
                    "description": "The UTC datetime when an admin `user` approved this `crew` to work this `position` for `event`s.",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "average_rating": {
                    "title": "Average rating",
                    "description": "The Average of the `crew_rating`s this `crew` has received for this `position`. Calculated on add/remove/update of ratings.",
                    "type": "number"
                },
                "rate": {
                    "title": "Rate",
                    "description": "The pay rate for this `crew` for this `position`.",
                    "type": "string",
                    "format": "decimal"
                },
                "rate_type": {
                    "title": "Rate type",
                    "description": "The divisor for calculating pay rate over time.",
                    "type": "string",
                    "enum": [
                        "hourly",
                        "daily",
                        "weekly"
                    ]
                },
                "rate_source": {
                    "title": "Rate source",
                    "description": "Determines whether this `crew_position` rate should sync with associated `position` or `crew` pay rates. Choices are:\n\"custom\" (default): Not synced- must be individually edited. \n\"standard_1\", \"standard_2\", \"standard_3\": synced with `position.rate1/rate2/rate3`. \n\"default\": synced with `crew.default_rate`.",
                    "type": "string",
                    "enum": [
                        "custom",
                        "default",
                        "standard_1",
                        "standard_2",
                        "standard_3"
                    ]
                },
                "rate_currency": {
                    "title": "Rate currency",
                    "type": "string",
                    "maxLength": 3,
                    "minLength": 1
                }
            }
        },
        "Passport": {
            "required": [
                "country",
                "expiry",
                "number"
            ],
            "type": "object",
            "properties": {
                "country": {
                    "title": "Country",
                    "description": "The country the passport is issued from.",
                    "type": "string",
                    "minLength": 1
                },
                "expiry": {
                    "title": "Expiry",
                    "description": "A date field for the expiration date of the passport.",
                    "type": "string",
                    "minLength": 1
                },
                "number": {
                    "title": "Number",
                    "description": "The passport number.",
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "CrewSettingsTravel": {
            "title": "Travel",
            "required": [
                "executive",
                "gender",
                "frequent_flyers",
                "hotel_rewards",
                "rental_cars",
                "redress",
                "tsa_precheck",
                "preferred_airlines",
                "travel_seating_preference",
                "meal_preferences",
                "passport_list"
            ],
            "type": "object",
            "properties": {
                "executive": {
                    "title": "Executive",
                    "description": "Boolean value for whether the `crew` member is an executive or not.",
                    "type": "boolean"
                },
                "gender": {
                    "title": "Gender",
                    "description": "The gender of the `crew` member. Allowed values are \"M\" and \"F\".",
                    "type": "string",
                    "enum": [
                        "M",
                        "F"
                    ]
                },
                "frequent_flyers": {
                    "title": "Frequent flyers",
                    "description": "Object for storing frequent flyer numbers associated with airlines.For each key/value pair, the key is the airline's name and the value is the frequent flyer number.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string",
                        "minLength": 1
                    }
                },
                "hotel_rewards": {
                    "title": "Hotel rewards",
                    "description": "Object for storing hotel reward numbers associated with various hotels.For each key/value pair, the key is the hotel's name and the value is the hotel reward number.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string",
                        "minLength": 1
                    }
                },
                "rental_cars": {
                    "title": "Rental cars",
                    "description": "Object for storing car rental reward numbers associated with various car rental companies.For each key/value pair, the key is the car rental company's name and the value is the car rental reward number.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string",
                        "minLength": 1
                    }
                },
                "redress": {
                    "title": "Redress",
                    "description": "The redress number of the `crew` member.",
                    "type": "string"
                },
                "tsa_precheck": {
                    "title": "Tsa precheck",
                    "description": "The TSA precheck number of the `crew` member.",
                    "type": "string"
                },
                "preferred_airlines": {
                    "description": "The airline the `crew` member prefers. Possible choices are \"Aer_Lingus\", \"Aeromexico\", \"Air_Canada\", \"Air_France\", \"Air_India\", \"Alaska_Airlines\", \"Alitalia\", \"All_Nippon_Airways\", \"American_Airlines\", \"Asiana_Airlines\", \"Avianca\", \"British_Airways\", \"Caribbean_Airlines\", \"Copa_Airlines\", \"Delta\", \"Emirates_Airlines\", \"Frontier\", \"Hawaiian_Airlines\", \"Iberia\", \"jetBlue\", \"KLM\", \"Korean_Air, \"Lan_Airlines\", \"LOT_Airlines\", \"Lufthansa\", \"Porter_Airlines\", \"Qantas\", \"SAS\", \"Singapore_Airlines\", \"Southwest_Airlines\", \"Spirit\", \"Sun_Country\", \"Swiss\", \"Taca_International\", \"Tam_Meridionais\", \"Turkish_Airlines\", \"United\", \"Virgin_America\", \"Virgin_Atlantic\", and \"WestJet\".",
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "Aer_Lingus",
                            "Aeromexico",
                            "Air_Canada",
                            "Air_France",
                            "Air_India",
                            "Alaska_Airlines",
                            "Alitalia",
                            "All_Nippon_Airways",
                            "American_Airlines",
                            "Asiana_Airlines",
                            "Avianca",
                            "British_Airways",
                            "Caribbean_Airlines",
                            "Copa_Airlines",
                            "Delta",
                            "Emirates_Airlines",
                            "Frontier",
                            "Hawaiian_Airlines",
                            "Iberia",
                            "jetBlue",
                            "KLM",
                            "Korean_Air",
                            "Lan_Airlines",
                            "LOT_Airlines",
                            "Lufthansa",
                            "Porter_Airlines",
                            "Qantas",
                            "SAS",
                            "Singapore_Airlines",
                            "Southwest_Airlines",
                            "Spirit",
                            "Sun_Country",
                            "Swiss",
                            "Taca_International",
                            "Tam_Meridionais",
                            "Turkish_Airlines",
                            "United",
                            "Virgin_America",
                            "Virgin_Atlantic",
                            "WestJet"
                        ]
                    }
                },
                "travel_seating_preference": {
                    "title": "Travel seating preference",
                    "description": "The flight seating preference of the `crew` member. Possible choices are \"window\" or \"aisle\".",
                    "type": "string",
                    "enum": [
                        "window",
                        "aisle"
                    ]
                },
                "meal_preferences": {
                    "description": "Array of types of meals a `crew` member prefers. Possible choices are \"Vegetarian\", \"Vegan\", \"Gluten_Free\", \"Nut_Allergy\", and \"Dairy_Allergy\"",
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "Vegetarian",
                            "Vegan",
                            "Gluten_Free",
                            "Nut_Allergy",
                            "Dairy_Allergy"
                        ]
                    }
                },
                "passport_list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Passport"
                    }
                }
            }
        },
        "CrewSettings": {
            "title": "Settings",
            "description": "The various settings this `crew` member has set.",
            "required": [
                "crew"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "description": "The LASSO unique identifier for this resource.",
                    "type": "integer",
                    "readOnly": true
                },
                "db_date_created": {
                    "title": "Db date created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "db_date_updated": {
                    "title": "Db date updated",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "crew": {
                    "title": "Crew",
                    "description": "The `crew` member id this address belongs to. This field is read only after it's been created.'",
                    "type": "integer"
                },
                "disable_emails": {
                    "title": "Disable emails",
                    "description": "Disables a `crew` member from receiving email notifications.",
                    "type": "boolean"
                },
                "disable_sms": {
                    "title": "Disable sms",
                    "description": "Disables a `crew` member from receiving sms notifications.",
                    "type": "boolean"
                },
                "travel": {
                    "$ref": "#/definitions/CrewSettingsTravel"
                },
                "date_of_birth": {
                    "title": "Date of birth",
                    "description": "The date of birth of a `crew` member.",
                    "type": "string",
                    "format": "date",
                    "x-nullable": true
                },
                "sms_crewing_status": {
                    "title": "Sms crewing status",
                    "description": "The status of sms crewing for a `crew` member once sms crewing is initiated.\nWhen set to \"confirmed\", a crew will receive event opportunites via sms notifications.",
                    "type": "string",
                    "enum": [
                        "disabled",
                        "pending",
                        "confirmed",
                        "declined"
                    ],
                    "readOnly": true
                }
            }
        },
        "CrewProfileURL": {
            "required": [
                "url"
            ],
            "type": "object",
            "properties": {
                "type": {
                    "title": "Type",
                    "type": "string",
                    "enum": [
                        "facebook",
                        "linkedin",
                        "twitter",
                        "instagram",
                        "portfolio",
                        "personal",
                        "company",
                        "other"
                    ]
                },
                "url": {
                    "title": "Url",
                    "type": "string",
                    "maxLength": 1024,
                    "minLength": 1
                },
                "db_date_created": {
                    "title": "Db date created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "db_date_updated": {
                    "title": "Db date updated",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                }
            },
            "description": "Represents any social accounts or personal                             websites the crew member has added to their profile."
        },
        "User": {
            "title": "User",
            "description": "The user who created the crew note.",
            "type": "object",
            "properties": {
                "first_name": {
                    "title": "First name",
                    "description": "`user`'s first name.",
                    "type": "string",
                    "maxLength": 100,
                    "x-nullable": true
                },
                "last_name": {
                    "title": "Last name",
                    "description": "`user`'s last name. First and Last name are the `user's \"full name\".",
                    "type": "string",
                    "maxLength": 100,
                    "x-nullable": true
                },
                "email": {
                    "title": "Email",
                    "description": "`user`'s email address. Must be unique.",
                    "type": "string",
                    "format": "email",
                    "maxLength": 254,
                    "minLength": 1
                }
            }
        },
        "CrewNote": {
            "description": "A `crew_note` represents internal notes about a crew member.                             A `crew_note` is not visible for a crew member.",
            "required": [
                "crew"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "description": "The LASSO unique identifier for this resource.",
                    "type": "integer",
                    "readOnly": true
                },
                "db_date_created": {
                    "title": "Db date created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "db_date_updated": {
                    "title": "Db date updated",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "crew": {
                    "title": "Crew",
                    "type": "integer"
                },
                "date_entered": {
                    "title": "Date entered",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "subject": {
                    "title": "Subject",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "body": {
                    "title": "Body",
                    "type": "string",
                    "x-nullable": true
                },
                "status": {
                    "title": "Status",
                    "type": "string",
                    "enum": [
                        "active",
                        "hidden",
                        "deleted"
                    ]
                },
                "user": {
                    "$ref": "#/definitions/User"
                }
            }
        },
        "CrewUnavailability": {
            "description": "\n    `crewunavailability` blocks out dates a `crew` is not available to work.\n    The LASSO system prevents `user`s from adding unavailabilities that conflict with dates\n    for which a `crew` is already approved to work an `event`,\n    and from crewing `crew` to `event_position`s which conflict with existing unavailabilities.\n    LASSO determines `event` conflicting dates using approved schedule entries\n    associated with an `event` roster position, not `event` \"date_begin\"/ \"date_end\".\n\n    ",
            "required": [
                "date_begin",
                "date_end"
            ],
            "type": "object",
            "properties": {
                "date_begin": {
                    "title": "Date begin",
                    "description": "The date the `crewunavailability` begins. Considered to start at 12:00am on this date (see Timezone).",
                    "type": "string",
                    "format": "date"
                },
                "date_end": {
                    "title": "Date end",
                    "description": "The date the `crewunavailability` ends. Considered to end at 11:59pm on this date (see Timezone).",
                    "type": "string",
                    "format": "date"
                },
                "note": {
                    "title": "Note",
                    "description": "An optional note describing the `crewunavailability`.",
                    "type": "string",
                    "x-nullable": true
                },
                "internal": {
                    "title": "Internal",
                    "description": "When false (default), this `crewunavailability` is visible to the unavailable `crew`. When true, it is visible to admin `user`s only.",
                    "type": "boolean"
                },
                "db_date_created": {
                    "title": "Db date created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "db_date_updated": {
                    "title": "Db date updated",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                }
            }
        },
        "CrewTag": {
            "required": [
                "crew",
                "tag"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "description": "The LASSO unique identifier for this resource.",
                    "type": "integer",
                    "readOnly": true
                },
                "db_date_created": {
                    "title": "Db date created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "db_date_updated": {
                    "title": "Db date updated",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "crew": {
                    "title": "Crew",
                    "description": "The id of the `crew` member this tag belongs to. This field is read only after it's been created.",
                    "type": "integer"
                },
                "tag": {
                    "title": "Tag",
                    "description": "The id of the `tag` associated with this `crew` member.",
                    "type": "integer"
                },
                "user_tagger": {
                    "$ref": "#/definitions/User"
                }
            },
            "description": "A `crew_tag` represents custom attributes for a `crew` member."
        },
        "Crew": {
            "required": [
                "email",
                "classification",
                "us_state_of_residence",
                "nearest_airport"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "description": "The LASSO unique identifier for this resource.",
                    "type": "integer",
                    "readOnly": true
                },
                "db_date_created": {
                    "title": "Db date created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "db_date_updated": {
                    "title": "Db date updated",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "status": {
                    "title": "Status",
                    "description": "The `status` of the `crew` member. Choices: preregister, pending, active, inactive.",
                    "type": "string",
                    "enum": [
                        "preregister",
                        "pending",
                        "active",
                        "inactive"
                    ]
                },
                "first_name": {
                    "title": "Preferred Name",
                    "description": "The `crew` member's first name, that they prefer to be called. This is what is displayed.",
                    "type": "string",
                    "maxLength": 100,
                    "x-nullable": true
                },
                "last_name": {
                    "title": "Last name",
                    "description": "The `crew` member's last name. This is what is displayed.",
                    "type": "string",
                    "maxLength": 100,
                    "x-nullable": true
                },
                "middle_name": {
                    "title": "Middle name",
                    "description": "The `crew` member's middle name.",
                    "type": "string",
                    "maxLength": 100,
                    "x-nullable": true
                },
                "email": {
                    "title": "Email",
                    "description": "The `crew` member's `email` address.",
                    "type": "string",
                    "format": "email",
                    "maxLength": 254,
                    "minLength": 1
                },
                "phone": {
                    "title": "Phone",
                    "description": "The `crew` member's `phone` number. This number must be able to recieve sms.",
                    "type": "string",
                    "maxLength": 30,
                    "x-nullable": true
                },
                "addresses": {
                    "description": "The physical addresses of this crew member.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CrewAddress"
                    },
                    "readOnly": true
                },
                "contacts": {
                    "description": "Emergency, referrral, and reference contacts for this `crew` member.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CrewContact"
                    },
                    "readOnly": true
                },
                "classification": {
                    "title": "Classification",
                    "description": "The `crew` member's category of employment. Choices: fulltime, parttime, contractor, volunteer, vendor, exempt.",
                    "type": "string",
                    "enum": [
                        "fulltime",
                        "parttime",
                        "contractor",
                        "volunteer",
                        "vendor",
                        "exempt"
                    ]
                },
                "legal_first_name": {
                    "title": "Legal first name",
                    "description": "The `crew` member's given first name found on legal documents.",
                    "type": "string",
                    "maxLength": 100,
                    "x-nullable": true
                },
                "legal_last_name": {
                    "title": "Legal last name",
                    "description": "The `crew` member's given last name found on legal documents.",
                    "type": "string",
                    "maxLength": 100,
                    "x-nullable": true
                },
                "us_state_of_residence": {
                    "title": "Us state of residence",
                    "type": "string",
                    "minLength": 1
                },
                "country": {
                    "title": "Country",
                    "type": "string",
                    "x-nullable": true
                },
                "rate": {
                    "title": "Rate",
                    "description": "The numerical amount of payment for this `crew` member.",
                    "type": "string",
                    "format": "decimal"
                },
                "rate_type": {
                    "title": "Rate type",
                    "description": "The type of `rate`. Choices: hourly, daily, weekly.",
                    "type": "string",
                    "enum": [
                        "hourly",
                        "daily",
                        "weekly"
                    ]
                },
                "rate_currency": {
                    "title": "Rate currency",
                    "type": "string",
                    "maxLength": 3,
                    "minLength": 1
                },
                "travel_rate": {
                    "title": "Travel rate",
                    "description": "The numerical amount of payment for travel for this `crew` member.",
                    "type": "string",
                    "format": "decimal"
                },
                "travel_rate_source": {
                    "title": "Travel rate source",
                    "description": "An indication of where the `travel rate` came from. Choices: custom, default.",
                    "type": "string",
                    "enum": [
                        "custom",
                        "default"
                    ]
                },
                "overall_rating": {
                    "title": "Overall rating",
                    "description": "The average rating for the `crew` member across all events and all positions. This is on a 5 point scale.",
                    "type": "number"
                },
                "project_manager": {
                    "title": "Project manager",
                    "description": "A boolean field of whether this `crew` member is a `project_manager`, `account_manager` or supervisor.",
                    "type": "boolean"
                },
                "code": {
                    "title": "Code",
                    "description": "An autogenerated, easy-to-read, unique, simple string to identify the `crew` member.",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "external_code": {
                    "title": "External code",
                    "description": "Employee Code used by SwipeClock and as customer unique identifier.",
                    "type": "string",
                    "maxLength": 50,
                    "x-nullable": true
                },
                "valid_passport": {
                    "title": "Valid passport",
                    "description": "A boolean field indicating whether this `crew` member has a valid passport.",
                    "type": "boolean"
                },
                "shirt_size": {
                    "title": "Shirt size",
                    "description": "This `crew` member's shirt size. Choices: XS, S, M, L, XL, XXL, XXXL, 4XL, 5XL.",
                    "type": "string",
                    "enum": [
                        "XS",
                        "S",
                        "M",
                        "L",
                        "XL",
                        "XXL",
                        "XXXL",
                        "4XL",
                        "5XL"
                    ],
                    "x-nullable": true
                },
                "date_onboarded": {
                    "title": "Date onboarded",
                    "description": "When this crew has completed this account's primary On-Boarding Packet. May be manually set by admin users with onboarding__hr permission.",
                    "type": "string",
                    "format": "date",
                    "x-nullable": true
                },
                "note": {
                    "title": "Note",
                    "description": "An internal brief message about this `crew` member.",
                    "type": "string",
                    "x-nullable": true
                },
                "positions": {
                    "description": "The posiitons this `crew` member has been associated by working, applying, etc.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CrewPosition"
                    },
                    "readOnly": true
                },
                "settings": {
                    "$ref": "#/definitions/CrewSettings"
                },
                "profiles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CrewProfileURL"
                    },
                    "readOnly": true
                },
                "notes": {
                    "description": "An internal brief message about this `crew` member.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CrewNote"
                    },
                    "readOnly": true
                },
                "division": {
                    "title": "Division",
                    "description": "The unique identifier of the `division` this `crew` member belongs to.",
                    "type": "integer",
                    "x-nullable": true
                },
                "unavailability": {
                    "description": "\n    `crewunavailability` blocks out dates a `crew` is not available to work.\n    The LASSO system prevents `user`s from adding unavailabilities that conflict with dates\n    for which a `crew` is already approved to work an `event`,\n    and from crewing `crew` to `event_position`s which conflict with existing unavailabilities.\n    LASSO determines `event` conflicting dates using approved schedule entries\n    associated with an `event` roster position, not `event` \"date_begin\"/ \"date_end\".\n\n    ",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CrewUnavailability"
                    },
                    "readOnly": true
                },
                "vendor": {
                    "title": "Vendor",
                    "description": "The unique identifier of the `vendor` this `crew` member belongs to.",
                    "type": "integer",
                    "readOnly": true,
                    "x-nullable": true
                },
                "nearest_airport": {
                    "title": "Nearest airport",
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CrewTag"
                    },
                    "readOnly": true
                },
                "local_markets": {
                    "description": "These are locations near this `crew` member's residence.",
                    "type": "array",
                    "items": {
                        "description": "These are locations near this `crew` member's residence.",
                        "type": "integer"
                    },
                    "readOnly": true,
                    "uniqueItems": true
                },
                "payroll_group": {
                    "title": "Payroll group",
                    "type": "integer",
                    "x-nullable": true
                }
            }
        },
        "CrewRating": {
            "required": [
                "crew",
                "crew_position"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "description": "The LASSO unique identifier for this resource.",
                    "type": "integer",
                    "readOnly": true
                },
                "db_date_created": {
                    "title": "Db date created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "db_date_updated": {
                    "title": "Db date updated",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "crew": {
                    "title": "Crew",
                    "description": "The id of the `crew` member this rating belongs to. This field is read only after it's been created.",
                    "type": "integer"
                },
                "crew_position": {
                    "title": "Crew position",
                    "description": "The position of the `crew` member this rating belongs to.",
                    "type": "integer"
                },
                "roster_position": {
                    "title": "Roster position",
                    "description": "The event roster position for the `crew` member this rating belongs to.",
                    "type": "integer",
                    "x-nullable": true
                },
                "rating": {
                    "title": "Rating",
                    "type": "number"
                },
                "user_rated": {
                    "$ref": "#/definitions/User"
                },
                "date_rated": {
                    "title": "Date rated",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "date_hidden": {
                    "title": "Date hidden",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "type": {
                    "title": "Type",
                    "type": "string",
                    "enum": [
                        "initial",
                        "supervisor",
                        "other"
                    ]
                },
                "notes": {
                    "title": "Notes",
                    "type": "string",
                    "x-nullable": true
                }
            }
        },
        "CustomFieldResponse": {
            "required": [
                "crew",
                "question",
                "response_data"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "description": "The LASSO unique identifier for this resource.",
                    "type": "integer",
                    "readOnly": true
                },
                "db_date_created": {
                    "title": "Db date created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "db_date_updated": {
                    "title": "Db date updated",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "crew": {
                    "title": "Crew",
                    "type": "integer"
                },
                "question": {
                    "title": "Question",
                    "type": "integer"
                },
                "data_type": {
                    "title": "Data type",
                    "type": "string",
                    "enum": [
                        "text",
                        "number",
                        "date",
                        "phone",
                        "select",
                        "multiselect",
                        "file",
                        "secure_text"
                    ]
                },
                "response_data": {
                    "title": "Response data",
                    "type": "string"
                }
            }
        },
        "CustomField": {
            "required": [
                "term",
                "label",
                "choices",
                "widget_config",
                "positions"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "description": "The LASSO unique identifier for this resource.",
                    "type": "integer",
                    "readOnly": true
                },
                "db_date_created": {
                    "title": "Db date created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "db_date_updated": {
                    "title": "Db date updated",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "status": {
                    "title": "Status",
                    "type": "string",
                    "enum": [
                        "active",
                        "inactive"
                    ]
                },
                "term": {
                    "title": "Term",
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 1
                },
                "label": {
                    "title": "Label",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "x-nullable": true
                },
                "data_type": {
                    "title": "Data type",
                    "type": "string",
                    "enum": [
                        "text",
                        "number",
                        "date",
                        "phone",
                        "select",
                        "multiselect",
                        "file",
                        "secure_text"
                    ]
                },
                "registration": {
                    "title": "Registration",
                    "type": "string",
                    "enum": [
                        "required",
                        "optional",
                        "hidden"
                    ]
                },
                "required_for_import": {
                    "title": "Required for import",
                    "type": "boolean"
                },
                "required_for_crewing": {
                    "title": "Required for crewing",
                    "type": "boolean"
                },
                "internal": {
                    "title": "Internal",
                    "type": "boolean"
                },
                "allow_edit": {
                    "title": "Allow edit",
                    "type": "boolean"
                },
                "require_verification": {
                    "title": "Require verification",
                    "type": "boolean"
                },
                "choices": {
                    "title": "Choices",
                    "type": "string"
                },
                "widget_config": {
                    "title": "Widget config",
                    "type": "string"
                },
                "step": {
                    "title": "Step",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "section": {
                    "title": "Section",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "positions": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "uniqueItems": true
                }
            }
        },
        "Division": {
            "required": [
                "name"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "description": "The LASSO unique identifier for this resource.",
                    "type": "integer",
                    "readOnly": true
                },
                "db_date_created": {
                    "title": "Db date created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "db_date_updated": {
                    "title": "Db date updated",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "status": {
                    "title": "Status",
                    "type": "string",
                    "enum": [
                        "active",
                        "inactive"
                    ]
                },
                "code": {
                    "title": "Code",
                    "description": "An autogenerated, easy-to-read, short string used to lookup a `division`.",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "external_code": {
                    "title": "External code",
                    "description": "Division Code used by customer (and passed to Swipeclock)",
                    "type": "string",
                    "maxLength": 50,
                    "x-nullable": true
                },
                "name": {
                    "title": "Name",
                    "description": "The given `name` of the `division`.",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "description": {
                    "title": "Description",
                    "description": "An explanation of what the `division` is.",
                    "type": "string",
                    "x-nullable": true
                }
            }
        },
        "EventAccountUserRoleRelationship": {
            "required": [
                "event",
                "account_user_role"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "description": "The LASSO unique identifier for this resource.",
                    "type": "integer",
                    "readOnly": true
                },
                "db_date_created": {
                    "title": "Db date created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "db_date_updated": {
                    "title": "Db date updated",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "date_removed": {
                    "title": "Date removed",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "event": {
                    "title": "Event",
                    "type": "integer"
                },
                "account_user_role": {
                    "title": "Account user role",
                    "type": "integer"
                }
            }
        },
        "EventCollection": {
            "required": [
                "name",
                "date_begin",
                "date_end",
                "client"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "description": "The LASSO unique identifier for this resource.",
                    "type": "integer",
                    "readOnly": true
                },
                "db_date_created": {
                    "title": "Db date created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "db_date_updated": {
                    "title": "Db date updated",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "code": {
                    "title": "Code",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "external_code": {
                    "title": "External code",
                    "type": "string",
                    "maxLength": 50,
                    "x-nullable": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "minLength": 1
                },
                "date_begin": {
                    "title": "Date begin",
                    "type": "string",
                    "format": "date"
                },
                "date_end": {
                    "title": "Date end",
                    "type": "string",
                    "format": "date"
                },
                "status": {
                    "title": "Status",
                    "type": "string",
                    "enum": [
                        "active",
                        "draft",
                        "removed",
                        "completed"
                    ]
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "x-nullable": true
                },
                "events": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "readOnly": true,
                    "uniqueItems": true
                },
                "client": {
                    "title": "Client",
                    "type": "integer"
                },
                "hide_name": {
                    "title": "Hide name",
                    "type": "boolean"
                }
            }
        },
        "EventGroup": {
            "required": [
                "event",
                "name",
                "venue"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "description": "The LASSO unique identifier for this resource.",
                    "type": "integer",
                    "readOnly": true
                },
                "db_date_created": {
                    "title": "Db date created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "db_date_updated": {
                    "title": "Db date updated",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "event": {
                    "title": "Event",
                    "type": "integer"
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                },
                "room": {
                    "title": "Room",
                    "type": "string",
                    "maxLength": 100,
                    "x-nullable": true
                },
                "venue": {
                    "title": "Venue",
                    "type": "integer"
                },
                "sequence": {
                    "title": "Sequence",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "date_rating_complete": {
                    "title": "Date rating complete",
                    "description": "If this is not None, Ratings for this group are consideredclosed and no more new ratings can be submitted. Set to None to reopen rating.",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                }
            }
        },
        "EventNote": {
            "required": [
                "event"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "description": "The LASSO unique identifier for this resource.",
                    "type": "integer",
                    "readOnly": true
                },
                "db_date_created": {
                    "title": "Db date created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "db_date_updated": {
                    "title": "Db date updated",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "event": {
                    "title": "Event",
                    "type": "integer"
                },
                "date_entered": {
                    "title": "Date entered",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "subject": {
                    "title": "Subject",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "body": {
                    "title": "Body",
                    "type": "string",
                    "x-nullable": true
                },
                "status": {
                    "title": "Status",
                    "type": "string",
                    "enum": [
                        "active",
                        "hidden",
                        "deleted"
                    ]
                }
            }
        },
        "ScheduleEntry": {
            "required": [
                "event",
                "event_position",
                "date",
                "start_time",
                "end_time"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "description": "The LASSO unique identifier for this resource.",
                    "type": "integer",
                    "readOnly": true
                },
                "db_date_created": {
                    "title": "Db date created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "db_date_updated": {
                    "title": "Db date updated",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "event": {
                    "title": "Event",
                    "type": "integer"
                },
                "event_position": {
                    "title": "Event position",
                    "type": "integer"
                },
                "row": {
                    "title": "Row",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "date": {
                    "title": "Date",
                    "type": "string",
                    "format": "date"
                },
                "start_time": {
                    "title": "Start time",
                    "type": "string"
                },
                "end_time": {
                    "title": "End time",
                    "type": "string"
                },
                "timezone": {
                    "title": "Timezone",
                    "type": "integer",
                    "readOnly": true
                },
                "type": {
                    "title": "Type",
                    "type": "string",
                    "enum": [
                        "shift",
                        "dark_day",
                        "travel"
                    ]
                },
                "utc_start": {
                    "title": "Utc start",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "utc_end": {
                    "title": "Utc end",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "hours_delta": {
                    "title": "Hours delta",
                    "description": "Number hours between start/end time",
                    "type": "number",
                    "readOnly": true
                },
                "hours_worked": {
                    "title": "Hours worked",
                    "description": "Number hours worked between start/end (excluding breaks)",
                    "type": "number",
                    "readOnly": true
                },
                "hours_billed": {
                    "title": "Hours billed",
                    "description": "Number hours billed -- overridhours_workedid",
                    "type": "number",
                    "readOnly": true
                },
                "hours_override": {
                    "title": "Hours override",
                    "type": "boolean",
                    "readOnly": true
                },
                "external_code": {
                    "title": "External code",
                    "type": "string",
                    "maxLength": 50,
                    "x-nullable": true
                },
                "external_remove_date": {
                    "title": "External remove date",
                    "description": "A date the `event_position` has been marked for removal by a third party via the LASSO API.",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                }
            }
        },
        "EventPosition": {
            "required": [
                "event",
                "group",
                "position",
                "quantity",
                "rate_setting"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "description": "The LASSO unique identifier for this resource.",
                    "type": "integer",
                    "readOnly": true
                },
                "db_date_created": {
                    "title": "Db date created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "db_date_updated": {
                    "title": "Db date updated",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "event": {
                    "title": "Event",
                    "type": "integer"
                },
                "group": {
                    "title": "Group",
                    "type": "integer"
                },
                "position": {
                    "title": "Position",
                    "type": "integer"
                },
                "quantity": {
                    "title": "Quantity",
                    "type": "integer",
                    "minimum": 0
                },
                "label": {
                    "title": "Label",
                    "description": "A short description- NOT visible to crew. Useful to differentiate multiple `event_positions` for the same `position` within an `event`/`event_group`.",
                    "type": "string",
                    "maxLength": 256,
                    "x-nullable": true
                },
                "status": {
                    "title": "Status",
                    "description": "The status of \"bidding\" - that is, whether `crew` are allowed to apply for this `event_position`. Choices are:\n\"pending\" (Default): Not visible to `crew`. Implies pre-bidding setup is still in progress. \n\"open\": `crew` who have been invited to apply for this `event_position` may see it. An event position is \"opened\" when first invitations are sent or first `crew` is added to roster. \n\"closed\": Not visible to crew. Implies that a deadline to apply has passed or all positions have been filled. When an `event`'s date_deadline passes, all associated `event_position`s are set to closed status, or bidding may be closed manually per-position.",
                    "type": "string",
                    "enum": [
                        "pending",
                        "open",
                        "closed"
                    ]
                },
                "sequence": {
                    "title": "Sequence",
                    "description": "Manages the display order of `event_position`s within a group. Display order falls back to date created.",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "rate_setting": {
                    "title": "Rate setting",
                    "description": "How pay rate is determined when `crew` apply to work this `event_position` and when they are added to the `event` roster for this `event_position` (via related `event_roster_position`. Default may be overridden in company settings. Choices are: \n\"crew_default\" (Default): Use the `crew`'s rate from their `crew_position` whose `position` matches this `event_position`'s \"position\". Do not ask `crew` to submit a rate. (Note that `crew_position` rates may not be visible to crew, per company settings.)\n\"crew_bid\": Ask `crew` to submit a rate. If crew does not submit a rate, use the rate from their `crew_position` like \"crew_default\".\n\"position_defined\": Set a custom rate as the default for all `event_roster_positions` added for this position, and display it to applying `crew`. Do not ask `crew` to submit a rate. ",
                    "type": "string",
                    "enum": [
                        "crew_default",
                        "crew_bid",
                        "position_defined"
                    ]
                },
                "rate": {
                    "title": "Rate",
                    "description": "The decimal pay rate for this `event_position`, if its \"rate_setting\" is \"position_defined\".",
                    "type": "string",
                    "format": "decimal"
                },
                "rate_currency": {
                    "title": "Rate currency",
                    "type": "string",
                    "maxLength": 3,
                    "minLength": 1
                },
                "rate_type": {
                    "title": "Rate type",
                    "description": "The unit by which pay rate is calculated over time. Conversion rates from weekly to daily to hourly are set by company settings.",
                    "type": "string",
                    "enum": [
                        "hourly",
                        "daily",
                        "weekly",
                        "event"
                    ]
                },
                "billed_rate": {
                    "title": "Billed rate",
                    "description": "The decimal billed (to `event` `client`) rate for this `event_position`. Defaults to `position` rate- for `event` `client` if set, or default rate.",
                    "type": "string",
                    "format": "decimal"
                },
                "billed_rate_type": {
                    "title": "Billed rate type",
                    "description": "The unit by which billable rate is calculated over time. Conversion rates from weekly to daily to hourly are set by company settings.",
                    "type": "string",
                    "enum": [
                        "hourly",
                        "daily",
                        "weekly",
                        "event"
                    ]
                },
                "schedule_begin": {
                    "title": "Schedule begin",
                    "description": "The earliest date on which this `event_position` requires work. If blank on initial save, set to `event` \"date_begin\". As related `schedule_entry`s are created/updated, calculated to match the earliest of these, of any shift type. ",
                    "type": "string",
                    "format": "date",
                    "x-nullable": true
                },
                "schedule_end": {
                    "title": "Schedule end",
                    "description": "The latest date on which this `event_position` requires work. If blank on initial save, set to `event` \"date_end\". As related `schedule_entry`s are created/updated, calculated to match the latest of these, of any shift type. ",
                    "type": "string",
                    "format": "date",
                    "x-nullable": true
                },
                "day_begin": {
                    "title": "Day begin",
                    "description": "A helper field for creating related `schedule_entry`s in bulk when creating this `event_position` via API. If this field and \"day_end\" are set on initial save, a `schedule_entry` shift with this start time is created for each day between \"schedule_begin\" and \"schedule_end\" (inclusive).",
                    "type": "string",
                    "x-nullable": true
                },
                "day_end": {
                    "title": "Day end",
                    "description": "A helper field for creating related `schedule_entry`s in bulk when creating this `event_position` via API. If this field and \"day_end\" are set on initial save, a `schedule_entry` shift with this end time is created for each day between \"schedule_begin\" and \"schedule_end\" (inclusive).",
                    "type": "string",
                    "x-nullable": true
                },
                "schedule_entries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ScheduleEntry"
                    },
                    "readOnly": true
                },
                "hide_end_time": {
                    "title": "Hide end time",
                    "description": "Whether `crew` approved to work on the `event` roster for this `event_position` may see their shift end times, as determined by `schedule_entry`s. Set to True to display only shift start times.",
                    "type": "boolean"
                },
                "note": {
                    "title": "Note",
                    "description": "A short description. Unlike \"label\", VISIBLE to `crew`- both crew are both applying, and who are approved to work for this `event_position`.",
                    "type": "string",
                    "maxLength": 2048,
                    "x-nullable": true
                },
                "external_code": {
                    "title": "External code",
                    "type": "string",
                    "maxLength": 50,
                    "x-nullable": true
                },
                "external_remove_date": {
                    "title": "External remove date",
                    "description": "A date the `event_position` has been marked for removal by a third party via the LASSO API.",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                }
            }
        },
        "EventRole": {
            "required": [
                "event",
                "group",
                "role",
                "crew"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "description": "The LASSO unique identifier for this resource.",
                    "type": "integer",
                    "readOnly": true
                },
                "db_date_created": {
                    "title": "Db date created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "db_date_updated": {
                    "title": "Db date updated",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "event": {
                    "title": "Event",
                    "type": "integer"
                },
                "group": {
                    "title": "Group",
                    "type": "integer"
                },
                "role": {
                    "title": "Role",
                    "type": "string",
                    "enum": [
                        "project-manager",
                        "supervisor",
                        "account-manager",
                        "timekeeper"
                    ]
                },
                "crew": {
                    "title": "Crew",
                    "type": "integer"
                },
                "is_primary": {
                    "title": "Is primary",
                    "type": "boolean"
                },
                "date_added": {
                    "title": "Date added",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "date_removed": {
                    "title": "Date removed",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                }
            }
        },
        "EventRosterPosition": {
            "required": [
                "event",
                "event_position",
                "group",
                "crew",
                "crew_position"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "description": "The LASSO unique identifier for this resource.",
                    "type": "integer",
                    "readOnly": true
                },
                "db_date_created": {
                    "title": "Db date created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "db_date_updated": {
                    "title": "Db date updated",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "event": {
                    "title": "Event",
                    "description": "The unique identifier of the `event` the `crew` is working the `event_position` for.",
                    "type": "integer"
                },
                "event_position": {
                    "title": "Event position",
                    "description": "The unique identifier of the `event_position` which represents the kind of work the `crew` is doing for the `event` and which stores `event`-specific standard facts about it.",
                    "type": "integer"
                },
                "group": {
                    "title": "Group",
                    "type": "integer"
                },
                "crew": {
                    "title": "Crew",
                    "type": "integer"
                },
                "crew_position": {
                    "title": "Crew position",
                    "type": "integer"
                },
                "user_added": {
                    "$ref": "#/definitions/User"
                },
                "user_approved": {
                    "$ref": "#/definitions/User"
                },
                "status": {
                    "title": "Status",
                    "description": "The approval status of this `event_roster_position`. Choices are:\n\"tentative\" (Default): All `event_roster_position`s begin as \"tentative\" when a crew is \"added to the roster\". May also imply that the `event` \"roster\" (collection of related `event_roster_position`s), is still under review in general.\n\"approved\": The decision to hire this `crew` to work this `event_position` is finalized. The changing of an `event_roster_position` status to \"approved\" is called \"roster approval\". An \"approved\" `event_roster_position`'s schedule, as described by its `event_position` related `schedule_entry`s, appears in the crew's schedule and displays as \"unavailable\" to other events. \n\"confirmed\": This status is not used by LASSO. Please see \"date_confirmed\".\n\"canceled\": This `event_roster_position`'s associated `event` is canceled.\n\"declined\": This status is set when a `crew` is \"approved\", confirmation is requested, and the `crew` then declines to work. Not visible to `crew`. Unlike declining an invitation, `crew` cannot change their mind after declining to confirm. They do, however, remain on the `event` roster (in \"declined\" status), and they may be re-approved/confirmation re-requested by an admin `user`. \"removed\": If a `crew` is added to a roster then taken off of it, either before or after approval, its status is set to \"removed\". It is not visible to `crew`, but they may be re-added to the roster in status \"tentative\" via crewing.",
                    "type": "string",
                    "enum": [
                        "tentative",
                        "approved",
                        "removed",
                        "canceled",
                        "declined"
                    ]
                },
                "date_confirmed": {
                    "title": "Date confirmed",
                    "description": "The UTC datetime at which the approval of this `event_roster_position` was confirmed-either by the related `crew` responding to a confirmation request, or by an admin `user`` skipping requesting crew confirmation.",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "date_approved": {
                    "title": "Date approved",
                    "description": "The UTC datetime at which an admin `user` approved this `crew` to work this `event_position` on this `event`, thus changing the \"status\" of this `event_roster_position` to \"approved\" (see \"status\").",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "date_added": {
                    "title": "Date added",
                    "description": "The UTC datetime at which an admin `user` added this `crew` (as \"tentative\") to work this `event_position` on this `event` (see \"status\").",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "rate": {
                    "title": "Rate",
                    "description": "The decimal pay rate for this `event_roster_position`. Inherited from `event_position`, but may be overridden.",
                    "type": "string",
                    "format": "decimal"
                },
                "rate_currency": {
                    "title": "Rate currency",
                    "type": "string",
                    "maxLength": 3,
                    "minLength": 1
                },
                "rate_type": {
                    "title": "Rate type",
                    "description": "The unit by which pay rate is calculated over time. Conversion rates from weekly to daily to hourly are set by company settings.",
                    "type": "string",
                    "enum": [
                        "hourly",
                        "daily",
                        "weekly",
                        "event"
                    ]
                },
                "removal_reason": {
                    "title": "Removal reason",
                    "description": "The reason `crew` was removed from the roster after being approved. Choices include: \n1: Didn\u2019t show up \n 2: Called out - excused \n 3: Called out - unexcused \n 4: No longer needed \n5: Found a crew member that was a better fit \n The default is 0.",
                    "type": "integer",
                    "enum": [
                        1,
                        2,
                        3,
                        4,
                        5
                    ],
                    "x-nullable": true
                },
                "total_labor": {
                    "title": "Total labor",
                    "description": "Total labor cost of this `crew` for this `event_position` on this `event`. Calculated as total_overhead, plus rate-over-schedule-time financial calculations.",
                    "type": "string",
                    "format": "decimal"
                },
                "total_overhead": {
                    "title": "Total overhead",
                    "description": "Total overhead of this `crew` for this `event_position` on this `event`, if applicable.",
                    "type": "string",
                    "format": "decimal"
                },
                "cached_analytics": {
                    "title": "Cached analytics",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "EventRosterPositionSerializerNoAnalytics": {
            "required": [
                "event",
                "event_position",
                "group",
                "crew",
                "crew_position"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "description": "The LASSO unique identifier for this resource.",
                    "type": "integer",
                    "readOnly": true
                },
                "db_date_created": {
                    "title": "Db date created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "db_date_updated": {
                    "title": "Db date updated",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "event": {
                    "title": "Event",
                    "type": "integer"
                },
                "event_position": {
                    "title": "Event position",
                    "type": "integer"
                },
                "group": {
                    "title": "Group",
                    "type": "integer"
                },
                "crew": {
                    "title": "Crew",
                    "type": "integer"
                },
                "crew_position": {
                    "title": "Crew position",
                    "type": "integer"
                },
                "user_added": {
                    "$ref": "#/definitions/User"
                },
                "user_approved": {
                    "$ref": "#/definitions/User"
                },
                "status": {
                    "title": "Status",
                    "description": "The approval status of this `event_roster_position`. Choices are:\n\"tentative\" (Default): All `event_roster_position`s begin as \"tentative\" when a crew is \"added to the roster\". May also imply that the `event` \"roster\" (collection of related `event_roster_position`s), is still under review in general.\n\"approved\": The decision to hire this `crew` to work this `event_position` is finalized. The changing of an `event_roster_position` status to \"approved\" is called \"roster approval\". An \"approved\" `event_roster_position`'s schedule, as described by its `event_position` related `schedule_entry`s, appears in the crew's schedule and displays as \"unavailable\" to other events. \n\"confirmed\": This status is not used by LASSO. Please see \"date_confirmed\".\n\"canceled\": This `event_roster_position`'s associated `event` is canceled.\n\"declined\": This status is set when a `crew` is \"approved\", confirmation is requested, and the `crew` then declines to work. Not visible to `crew`. Unlike declining an invitation, `crew` cannot change their mind after declining to confirm. They do, however, remain on the `event` roster (in \"declined\" status), and they may be re-approved/confirmation re-requested by an admin `user`. \"removed\": If a `crew` is added to a roster then taken off of it, either before or after approval, its status is set to \"removed\". It is not visible to `crew`, but they may be re-added to the roster in status \"tentative\" via crewing.",
                    "type": "string",
                    "enum": [
                        "tentative",
                        "approved",
                        "removed",
                        "canceled",
                        "declined"
                    ]
                },
                "date_confirmed": {
                    "title": "Date confirmed",
                    "description": "The UTC datetime at which the approval of this `event_roster_position` was confirmed-either by the related `crew` responding to a confirmation request, or by an admin `user`` skipping requesting crew confirmation.",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "date_approved": {
                    "title": "Date approved",
                    "description": "The UTC datetime at which an admin `user` approved this `crew` to work this `event_position` on this `event`, thus changing the \"status\" of this `event_roster_position` to \"approved\" (see \"status\").",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "date_added": {
                    "title": "Date added",
                    "description": "The UTC datetime at which an admin `user` added this `crew` (as \"tentative\") to work this `event_position` on this `event` (see \"status\").",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "rate": {
                    "title": "Rate",
                    "description": "The decimal pay rate for this `event_roster_position`. Inherited from `event_position`, but may be overridden.",
                    "type": "string",
                    "format": "decimal"
                },
                "rate_currency": {
                    "title": "Rate currency",
                    "type": "string",
                    "maxLength": 3,
                    "minLength": 1
                },
                "rate_type": {
                    "title": "Rate type",
                    "description": "The unit by which pay rate is calculated over time. Conversion rates from weekly to daily to hourly are set by company settings.",
                    "type": "string",
                    "enum": [
                        "hourly",
                        "daily",
                        "weekly",
                        "event"
                    ]
                },
                "removal_reason": {
                    "title": "Removal reason",
                    "description": "The reason `crew` was removed from the roster after being approved. Choices include: \n1: Didn\u2019t show up \n 2: Called out - excused \n 3: Called out - unexcused \n 4: No longer needed \n5: Found a crew member that was a better fit \n The default is 0.",
                    "type": "integer",
                    "enum": [
                        1,
                        2,
                        3,
                        4,
                        5
                    ],
                    "x-nullable": true
                }
            }
        },
        "CrewActuals": {
            "description": "The total costs for `crew`.",
            "required": [
                "crew",
                "total_cost",
                "cost_currency"
            ],
            "type": "object",
            "properties": {
                "crew": {
                    "title": "Crew",
                    "type": "string"
                },
                "total_cost": {
                    "title": "Total cost",
                    "description": "The sum of all payments from all shifts for the `crew`.",
                    "type": "string",
                    "format": "decimal"
                },
                "cost_currency": {
                    "title": "Cost currency",
                    "description": "The currency type of the total cost given.",
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "Event": {
            "required": [
                "division",
                "client",
                "venue",
                "account_event_status",
                "nearest_airport",
                "name",
                "date_begin",
                "date_end"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "description": "The LASSO unique identifier for this resource.",
                    "type": "integer",
                    "readOnly": true
                },
                "db_date_created": {
                    "title": "Db date created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "db_date_updated": {
                    "title": "Db date updated",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "division": {
                    "title": "Division",
                    "description": "This is the id of the `division` the `event` belongs to.",
                    "type": "integer"
                },
                "client": {
                    "title": "Client",
                    "type": "integer"
                },
                "venue": {
                    "title": "Venue",
                    "type": "integer"
                },
                "market": {
                    "title": "Market",
                    "description": "If this is None, nobody will be local to this event.This is not exposed in the LASSO platform. Instead, it is set by nearest_airport.",
                    "type": "integer",
                    "x-nullable": true
                },
                "account_event_status": {
                    "title": "Account event status",
                    "type": "integer"
                },
                "nearest_airport": {
                    "title": "Nearest airport",
                    "type": "string"
                },
                "code": {
                    "title": "Code",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "external_code": {
                    "title": "External code",
                    "type": "string",
                    "maxLength": 50,
                    "x-nullable": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "minLength": 1
                },
                "status": {
                    "title": "Status",
                    "type": "string",
                    "enum": [
                        "unpublished",
                        "published",
                        "completed",
                        "canceled",
                        "test_event"
                    ]
                },
                "travel_booking_status": {
                    "title": "Travel booking status",
                    "type": "string",
                    "enum": [
                        "draft",
                        "ready",
                        "in_progress",
                        "completed"
                    ],
                    "x-nullable": true
                },
                "date_archived": {
                    "title": "Date archived",
                    "description": "Date event was archived. Date format: YYYY-MM-DDThh:mm[:ss[.uuuuuu]][+HH:MM|-HH:MM|Z].",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "date_begin": {
                    "title": "Date begin",
                    "type": "string",
                    "format": "date"
                },
                "date_end": {
                    "title": "Date end",
                    "type": "string",
                    "format": "date"
                },
                "date_changed": {
                    "title": "Date changed",
                    "description": "The datetime when a child record of the `event` has changed.",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "date_deadline": {
                    "title": "Date deadline",
                    "type": "string",
                    "format": "date-time"
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "x-nullable": true
                },
                "local_only": {
                    "title": "Local only",
                    "type": "boolean"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "readOnly": true,
                    "uniqueItems": true
                },
                "positions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/EventPosition"
                    },
                    "readOnly": true
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/EventRole"
                    },
                    "readOnly": true
                },
                "account_user_role_relationships": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/EventAccountUserRoleRelationship"
                    },
                    "readOnly": true
                },
                "notes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/EventNote"
                    },
                    "readOnly": true
                },
                "roster_positions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/EventRosterPositionSerializerNoAnalytics"
                    },
                    "readOnly": true
                },
                "actuals": {
                    "description": "The total costs for `crew`.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CrewActuals"
                    },
                    "readOnly": true
                },
                "timezone": {
                    "title": "Timezone",
                    "description": "This is not exposed in the LASSO platform. It is set by nearest airport timezone and falls back to account timezone.",
                    "type": "integer",
                    "readOnly": true
                },
                "program": {
                    "title": "Program",
                    "description": "This is the id of the `program` the `event` belongs to. NOTE: These are known as `Tours` in the LASSO UI.",
                    "type": "integer",
                    "x-nullable": true
                },
                "hide_client": {
                    "title": "Hide client",
                    "type": "boolean"
                },
                "hide_name": {
                    "title": "Hide name",
                    "type": "boolean"
                }
            }
        },
        "Position": {
            "required": [
                "name",
                "short_name"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "description": "The LASSO unique identifier for this resource.",
                    "type": "integer",
                    "readOnly": true
                },
                "db_date_created": {
                    "title": "Db date created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "db_date_updated": {
                    "title": "Db date updated",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "external_code": {
                    "title": "External code",
                    "description": "Position Code used as customer unique identifier",
                    "type": "string",
                    "maxLength": 50,
                    "x-nullable": true
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "x-nullable": true
                },
                "category": {
                    "title": "Category",
                    "type": "string",
                    "maxLength": 50,
                    "x-nullable": true
                },
                "import_name": {
                    "title": "Import name",
                    "type": "string",
                    "maxLength": 100,
                    "x-nullable": true
                },
                "short_name": {
                    "title": "Short name",
                    "type": "string",
                    "minLength": 1
                },
                "approved_count": {
                    "title": "Approved count",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "pending_count": {
                    "title": "Pending count",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "class_code": {
                    "title": "Class code",
                    "type": "string",
                    "maxLength": 4,
                    "x-nullable": true
                },
                "status": {
                    "title": "Status",
                    "type": "string",
                    "enum": [
                        "active",
                        "inactive",
                        "deleted"
                    ]
                },
                "application_status": {
                    "title": "Application status",
                    "type": "string",
                    "enum": [
                        "open",
                        "internal",
                        "closed"
                    ]
                },
                "rate1": {
                    "title": "Rate1",
                    "type": "string",
                    "format": "decimal"
                },
                "rate1_type": {
                    "title": "Rate1 type",
                    "type": "string",
                    "enum": [
                        "hourly",
                        "daily"
                    ]
                },
                "rate2": {
                    "title": "Rate2",
                    "type": "string",
                    "format": "decimal"
                },
                "rate2_type": {
                    "title": "Rate2 type",
                    "type": "string",
                    "enum": [
                        "hourly",
                        "daily"
                    ]
                },
                "rate3": {
                    "title": "Rate3",
                    "type": "string",
                    "format": "decimal"
                },
                "rate3_type": {
                    "title": "Rate3 type",
                    "type": "string",
                    "enum": [
                        "hourly",
                        "daily"
                    ]
                }
            }
        },
        "Tag": {
            "required": [
                "name",
                "color",
                "allowed_positions"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "description": "The LASSO unique identifier for this resource.",
                    "type": "integer",
                    "readOnly": true
                },
                "db_date_created": {
                    "title": "Db date created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "db_date_updated": {
                    "title": "Db date updated",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "category": {
                    "title": "Category",
                    "type": "string",
                    "pattern": "^[A-Za-z0-9 -]+$",
                    "maxLength": 50
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "pattern": "^[A-Za-z0-9 -]+$",
                    "maxLength": 50,
                    "minLength": 1
                },
                "description": {
                    "title": "Description",
                    "type": "string"
                },
                "color": {
                    "title": "Color",
                    "type": "string",
                    "enum": [
                        "",
                        "red",
                        "blue",
                        "purple",
                        "orange",
                        "yellow",
                        "lightgreen",
                        "cyan",
                        "grey",
                        "white",
                        "black",
                        "darkgreen",
                        "magenta",
                        "maroon",
                        "navy"
                    ]
                },
                "important": {
                    "title": "Important",
                    "type": "boolean"
                },
                "status": {
                    "title": "Status",
                    "type": "string",
                    "enum": [
                        "active",
                        "inactive"
                    ]
                },
                "allowed_positions": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "uniqueItems": true
                }
            }
        },
        "Timezone": {
            "required": [
                "id",
                "name"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "integer",
                    "maximum": 9223372036854775807,
                    "minimum": -9223372036854775808
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 120,
                    "minLength": 1
                }
            }
        },
        "Vendor": {
            "required": [
                "name",
                "email",
                "us_state"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "description": "The LASSO unique identifier for this resource.",
                    "type": "integer",
                    "readOnly": true
                },
                "db_date_created": {
                    "title": "Db date created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "db_date_updated": {
                    "title": "Db date updated",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "code": {
                    "title": "Code",
                    "description": "An autogenerated, readable, short string that is used to easily look up this `vendor` and                                     is added to the end of a url for tracking.",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "external_code": {
                    "title": "External code",
                    "description": "An `external code` is an id that comes from the customer to track `vendor`.",
                    "type": "string",
                    "maxLength": 50,
                    "x-nullable": true
                },
                "name": {
                    "title": "Name",
                    "description": "The `name` of this `vendor`.",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                },
                "status": {
                    "title": "Status",
                    "description": "The `status` of this `vendor`. Choices: active, inactive.",
                    "type": "string",
                    "enum": [
                        "active",
                        "inactive"
                    ]
                },
                "email": {
                    "title": "Email",
                    "description": "The `email` address that belongs to this `vendor`.",
                    "type": "string",
                    "format": "email",
                    "maxLength": 254,
                    "minLength": 1
                },
                "kind": {
                    "title": "Kind",
                    "description": "The type of `vendor` this is. Choices: union, staffing, other.",
                    "type": "string",
                    "enum": [
                        "union",
                        "staffing",
                        "other"
                    ]
                },
                "us_state": {
                    "title": "Us state",
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "VenueContact": {
            "required": [
                "venue"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "description": "The LASSO unique identifier for this resource.",
                    "type": "integer",
                    "readOnly": true
                },
                "db_date_created": {
                    "title": "Db date created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "db_date_updated": {
                    "title": "Db date updated",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "type": {
                    "title": "Type",
                    "description": "Type of contact. Choices: main, billing, shipping, other, ",
                    "type": "string",
                    "enum": [
                        "main",
                        "billing",
                        "shipping",
                        "other"
                    ]
                },
                "venue": {
                    "title": "Venue",
                    "description": "the `venue` associated with this `venue_contact`.",
                    "type": "integer"
                },
                "first_name": {
                    "title": "First name",
                    "description": "`contact`'s first name.",
                    "type": "string",
                    "maxLength": 100,
                    "x-nullable": true
                },
                "last_name": {
                    "title": "Last name",
                    "description": "`contact`'s last name.",
                    "type": "string",
                    "maxLength": 100,
                    "x-nullable": true
                },
                "email": {
                    "title": "Email",
                    "description": "`contact`'s email address.",
                    "type": "string",
                    "format": "email",
                    "maxLength": 256,
                    "x-nullable": true
                },
                "mobile": {
                    "title": "Mobile",
                    "description": "`contact`'s mobile phone number.",
                    "type": "string",
                    "maxLength": 30,
                    "x-nullable": true
                },
                "phone": {
                    "title": "Phone",
                    "description": "`contact`'s phone number.",
                    "type": "string",
                    "maxLength": 30,
                    "x-nullable": true
                },
                "extension": {
                    "title": "Extension",
                    "description": "Extension for `contact`'s phone number.",
                    "type": "string",
                    "maxLength": 20,
                    "x-nullable": true
                },
                "fax": {
                    "title": "Fax",
                    "description": "`contact`'s fax number.",
                    "type": "string",
                    "maxLength": 30,
                    "x-nullable": true
                },
                "company_name": {
                    "title": "Company name",
                    "description": "`contact`'s company's name. This field is not exposed in LASSO for `venue_contact`.",
                    "type": "string",
                    "maxLength": 256,
                    "x-nullable": true
                },
                "job_title": {
                    "title": "Job title",
                    "description": "`contact`'s job title.",
                    "type": "string",
                    "maxLength": 100,
                    "x-nullable": true
                }
            }
        },
        "VenueNote": {
            "required": [
                "venue"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "description": "The LASSO unique identifier for this resource.",
                    "type": "integer",
                    "readOnly": true
                },
                "db_date_created": {
                    "title": "Db date created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "db_date_updated": {
                    "title": "Db date updated",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "venue": {
                    "title": "Venue",
                    "type": "integer"
                },
                "room": {
                    "title": "Room",
                    "type": "integer",
                    "x-nullable": true
                },
                "date_entered": {
                    "title": "Date entered",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "subject": {
                    "title": "Subject",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "body": {
                    "title": "Body",
                    "type": "string",
                    "x-nullable": true
                },
                "status": {
                    "title": "Status",
                    "type": "string",
                    "enum": [
                        "active",
                        "hidden",
                        "deleted"
                    ]
                }
            }
        },
        "VenueRoom": {
            "required": [
                "name",
                "venue"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "description": "The LASSO unique identifier for this resource.",
                    "type": "integer",
                    "readOnly": true
                },
                "db_date_created": {
                    "title": "Db date created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "db_date_updated": {
                    "title": "Db date updated",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "venue": {
                    "title": "Venue",
                    "type": "integer"
                },
                "dimensions": {
                    "title": "Dimensions",
                    "type": "string",
                    "maxLength": 100,
                    "x-nullable": true
                }
            },
            "description": "A `venue_room` represents a room associated with a `venue`."
        },
        "Venue": {
            "required": [
                "name",
                "locality",
                "region",
                "airport"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "description": "The LASSO unique identifier for this resource.",
                    "type": "integer",
                    "readOnly": true
                },
                "db_date_created": {
                    "title": "Db date created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "db_date_updated": {
                    "title": "Db date updated",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "code": {
                    "title": "Code",
                    "description": "The system generated unique identifier for the `venue` resource.                   Used as a human-readable-friendly code in the URL for the resource.",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "external_code": {
                    "title": "External code",
                    "description": "A `venue` resource identifier created by a user.                   Also referred to as the \"Vendor ID\".",
                    "type": "string",
                    "maxLength": 50,
                    "x-nullable": true
                },
                "name": {
                    "title": "Name",
                    "description": "The name of the `venue` and the attribute used for resource look-ups in searches.",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "status": {
                    "title": "Status",
                    "description": "The status of the `venue` resource.",
                    "type": "string",
                    "enum": [
                        "active",
                        "inactive"
                    ]
                },
                "rooms": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "readOnly": true,
                    "uniqueItems": true
                },
                "notes": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "readOnly": true,
                    "uniqueItems": true
                },
                "contacts": {
                    "description": "`venue_contact`s associated with this `venue`.",
                    "type": "array",
                    "items": {
                        "description": "`venue_contact`s associated with this `venue`.",
                        "type": "integer"
                    },
                    "readOnly": true,
                    "uniqueItems": true
                },
                "street1": {
                    "title": "Street1",
                    "description": "The first line of the street address associated with the resource.",
                    "type": "string",
                    "maxLength": 256,
                    "x-nullable": true
                },
                "street2": {
                    "title": "Street2",
                    "description": "The second line of the street address associated with the resource.",
                    "type": "string",
                    "maxLength": 256,
                    "x-nullable": true
                },
                "street3": {
                    "title": "Street3",
                    "description": "The third line of the street address associated with the resource.",
                    "type": "string",
                    "maxLength": 256,
                    "x-nullable": true
                },
                "locality": {
                    "title": "Locality",
                    "type": "string",
                    "minLength": 1
                },
                "region": {
                    "title": "Region",
                    "type": "string",
                    "minLength": 1
                },
                "postal_code": {
                    "title": "Postal code",
                    "description": "The resource\u2019s mail sorting code.",
                    "type": "string",
                    "maxLength": 20,
                    "x-nullable": true
                },
                "country": {
                    "title": "Country",
                    "description": "The `country` in which the resource resides.",
                    "type": "string"
                },
                "phone": {
                    "title": "Phone",
                    "description": "The resource\u2019s phone number.",
                    "type": "string",
                    "maxLength": 30,
                    "x-nullable": true
                },
                "airport": {
                    "title": "Airport",
                    "type": "string"
                },
                "market": {
                    "title": "Market",
                    "description": "The unique identifier of the `market` which represents the resource location.",
                    "type": "integer",
                    "x-nullable": true
                }
            }
        }
    }
}